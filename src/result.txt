Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], UNKNOWN), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
Something is purged!
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 500 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[IntLiteral(120)])])]))])<EOF> || num:  500  |  True
--Jasmin Code  500  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	bipush 120
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 120
Expect: 120
================================END 500 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], UNKNOWN), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
Something is purged!
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 501 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[IntLiteral(120)])])]))])<EOF> || num:  501  |  True
--Jasmin Code  501  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	bipush 120
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 120
Expect: 120
================================END 501 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(a, Int, Variable, class=MCClass)
	 OldSymbol(main, MType([], UNKNOWN), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
Something is purged!
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(a, Int, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 503 ================================
Input: Program([VarDecl(Id(a),IntLiteral(1)),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(a)])])]))])<EOF> || num:  503  |  True
--Jasmin Code  503  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static a I

.method public static Main()V
Label0:
	getstatic MCClass.a I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_1
	putstatic MCClass.a I
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: 1
Expect: 1
================================END 503 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(a, Int, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(a, Int, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 504 ================================
Input: Program([VarDecl(Id(a),IntLiteral(2)),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(a)])]),Return()]))])<EOF> || num:  504  |  True
--Jasmin Code  504  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static a I

.method public static Main()V
Label0:
	getstatic MCClass.a I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_2
	putstatic MCClass.a I
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: 2
Expect: 2
================================END 504 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(b, Float, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(b, Float, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 505 ================================
Input: Program([VarDecl(Id(b),FloatLiteral(5.0)),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(b)])]),Return()]))])<EOF> || num:  505  |  True
--Jasmin Code  505  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static b F

.method public static Main()V
Label0:
	getstatic MCClass.b F
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	ldc 5.0
	putstatic MCClass.b F
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: 5.0
Expect: 5.0
================================END 505 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(c, Bool, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(c, Bool, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 506 ================================
Input: Program([VarDecl(Id(c),BooleanLiteral(true)),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[Id(c)])]),Return()]))])<EOF> || num:  506  |  True
--Jasmin Code  506  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static c Z

.method public static Main()V
Label0:
	getstatic MCClass.c Z
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_1
	putstatic MCClass.c Z
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: true
Expect: true
================================END 506 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(d, String, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(d, String, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 507 ================================
Input: Program([VarDecl(Id(d),StringLiteral(Hello)),FuncDecl(Id(main)[],([][CallStmt(Id(print),[Id(d)]),Return()]))])<EOF> || num:  507  |  True
--Jasmin Code  507  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static d Ljava/lang/String;

.method public static Main()V
Label0:
	getstatic MCClass.d Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	ldc "Hello"
	putstatic MCClass.d Ljava/lang/String;
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: Hello
Expect: Hello
================================END 507 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(Int, [3]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(Int, [3]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 508 ================================
Input: Program([VarDecl(Id(x),[3],ArrayLiteral(IntLiteral(1),IntLiteral(2),IntLiteral(3))),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1)])])]),Return()]))])<EOF> || num:  508  |  True
--Jasmin Code  508  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [I

.method public static Main()V
Label0:
	getstatic MCClass.x [I
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_1
	iastore
	dup
	iconst_1
	iconst_2
	iastore
	dup
	iconst_2
	iconst_3
	iastore
	putstatic MCClass.x [I
Label1:
	return
.limit stack 4
.limit locals 0
.end method

Result: 2
Expect: 2
================================END 508 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(Int, [2, 3]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(Int, [2, 3]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 509 ================================
Input: Program([VarDecl(Id(x),[2,3],ArrayLiteral(ArrayLiteral(IntLiteral(1),IntLiteral(2),IntLiteral(3)),ArrayLiteral(IntLiteral(4),IntLiteral(5),IntLiteral(6)))),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])])]),Return()]))])<EOF> || num:  509  |  True
--Jasmin Code  509  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [[I

.method public static Main()V
Label0:
	getstatic MCClass.x [[I
	iconst_1
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_1
	iastore
	dup
	iconst_1
	iconst_2
	iastore
	dup
	iconst_2
	iconst_3
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_4
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 6
	iastore
	aastore
	putstatic MCClass.x [[I
Label1:
	return
.limit stack 7
.limit locals 0
.end method

Result: 5
Expect: 5
================================END 509 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Int, Variable, class=MCClass)
	 OldSymbol(y, Float, Variable, class=MCClass)
	 OldSymbol(s, String, Variable, class=MCClass)
	 OldSymbol(z, Int, Variable, class=MCClass)
	 OldSymbol(b, Bool, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Int, class=MCClass)
	 Symbol(y, Float, class=MCClass)
	 Symbol(s, String, class=MCClass)
	 Symbol(z, Int, class=MCClass)
	 Symbol(b, Bool, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 510 ================================
Input: Program([VarDecl(Id(x),IntLiteral(100)),VarDecl(Id(y),FloatLiteral(1.0)),VarDecl(Id(s),StringLiteral(Phuc)),VarDecl(Id(z),IntLiteral(5)),VarDecl(Id(b),BooleanLiteral(true)),FuncDecl(Id(main)[],([][CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(x)])]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_float),[Id(y)])]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(z)])]),CallStmt(Id(printStrLn),[Id(s)]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[Id(b)])]),Return()]))])<EOF> || num:  510  |  True
--Jasmin Code  510  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x I
.field static y F
.field static s Ljava/lang/String;
.field static z I
.field static b Z

.method public static Main()V
Label0:
	getstatic MCClass.x I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	getstatic MCClass.y F
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	getstatic MCClass.z I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	getstatic MCClass.s Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	getstatic MCClass.b Z
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	bipush 100
	putstatic MCClass.x I
	ldc 1.0
	putstatic MCClass.y F
	ldc "Phuc"
	putstatic MCClass.s Ljava/lang/String;
	iconst_5
	putstatic MCClass.z I
	iconst_1
	putstatic MCClass.b Z
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: 100
1.0
5
Phuc
true
Expect: 100
1.0
5
Phuc
true
================================END 510 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(Float, [3]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(Float, [3]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 511 ================================
Input: Program([VarDecl(Id(x),ArrayLiteral(FloatLiteral(1.1),FloatLiteral(2.2),FloatLiteral(3.3))),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(2)])])]),Return()]))])<EOF> || num:  511  |  True
--Jasmin Code  511  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [F

.method public static Main()V
Label0:
	getstatic MCClass.x [F
	iconst_0
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [F
	iconst_1
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [F
	iconst_2
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 1.1
	fastore
	dup
	iconst_1
	ldc 2.2
	fastore
	dup
	iconst_2
	ldc 3.3
	fastore
	putstatic MCClass.x [F
Label1:
	return
.limit stack 4
.limit locals 0
.end method

Result: 1.12.23.3
Expect: 1.12.23.3
================================END 511 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(Bool, [2]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(Bool, [2]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 512 ================================
Input: Program([VarDecl(Id(x),[2],ArrayLiteral(BooleanLiteral(true),BooleanLiteral(false))),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(1)])])]),Return()]))])<EOF> || num:  512  |  True
--Jasmin Code  512  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [Z

.method public static Main()V
Label0:
	getstatic MCClass.x [Z
	iconst_0
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [Z
	iconst_1
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_2
	newarray boolean
	dup
	iconst_0
	iconst_1
	bastore
	dup
	iconst_1
	iconst_0
	bastore
	putstatic MCClass.x [Z
Label1:
	return
.limit stack 4
.limit locals 0
.end method

Result: truefalse
Expect: truefalse
================================END 512 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(Float, [3, 3]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(Float, [3, 3]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 513 ================================
Input: Program([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(FloatLiteral(1.1),FloatLiteral(2.2),FloatLiteral(3.3)),ArrayLiteral(FloatLiteral(4.4),FloatLiteral(5.5),FloatLiteral(6.6)),ArrayLiteral(FloatLiteral(7.7),FloatLiteral(8.8),FloatLiteral(9.9)))),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(2),IntLiteral(2)])])]),Return()]))])<EOF> || num:  513  |  True
--Jasmin Code  513  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [[F

.method public static Main()V
Label0:
	getstatic MCClass.x [[F
	iconst_0
	aaload
	iconst_0
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [[F
	iconst_1
	aaload
	iconst_1
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [[F
	iconst_2
	aaload
	iconst_2
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_3
	anewarray [F
	dup
	iconst_0
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 1.1
	fastore
	dup
	iconst_1
	ldc 2.2
	fastore
	dup
	iconst_2
	ldc 3.3
	fastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 4.4
	fastore
	dup
	iconst_1
	ldc 5.5
	fastore
	dup
	iconst_2
	ldc 6.6
	fastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 7.7
	fastore
	dup
	iconst_1
	ldc 8.8
	fastore
	dup
	iconst_2
	ldc 9.9
	fastore
	aastore
	putstatic MCClass.x [[F
Label1:
	return
.limit stack 7
.limit locals 0
.end method

Result: 1.15.59.9
Expect: 1.15.59.9
================================END 513 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(Bool, [2, 2]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(Bool, [2, 2]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 514 ================================
Input: Program([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(BooleanLiteral(true),BooleanLiteral(false)),ArrayLiteral(BooleanLiteral(false),BooleanLiteral(true)))),FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])])]),Return()]))])<EOF> || num:  514  |  True
--Jasmin Code  514  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [[Z

.method public static Main()V
Label0:
	getstatic MCClass.x [[Z
	iconst_0
	aaload
	iconst_0
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [[Z
	iconst_1
	aaload
	iconst_1
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_2
	anewarray [Z
	dup
	iconst_0
	iconst_2
	newarray boolean
	dup
	iconst_0
	iconst_1
	bastore
	dup
	iconst_1
	iconst_0
	bastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray boolean
	dup
	iconst_0
	iconst_0
	bastore
	dup
	iconst_1
	iconst_1
	bastore
	aastore
	putstatic MCClass.x [[Z
Label1:
	return
.limit stack 7
.limit locals 0
.end method

Result: truetrue
Expect: truetrue
================================END 514 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(String, [2, 2]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(String, [2, 2]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 515 ================================
Input: Program([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(StringLiteral(This),StringLiteral( is)),ArrayLiteral(StringLiteral( a),StringLiteral( random sentence.)))),FuncDecl(Id(main)[],([][CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(1)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])]),Return()]))])<EOF> || num:  515  |  True
--Jasmin Code  515  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [[Ljava/lang/String;

.method public static Main()V
Label0:
	getstatic MCClass.x [[Ljava/lang/String;
	iconst_0
	aaload
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [[Ljava/lang/String;
	iconst_0
	aaload
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [[Ljava/lang/String;
	iconst_1
	aaload
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.x [[Ljava/lang/String;
	iconst_1
	aaload
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_2
	anewarray [Ljava/lang/String;
	dup
	iconst_0
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc "This"
	aastore
	dup
	iconst_1
	ldc " is"
	aastore
	aastore
	dup
	iconst_1
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc " a"
	aastore
	dup
	iconst_1
	ldc " random sentence."
	aastore
	aastore
	putstatic MCClass.x [[Ljava/lang/String;
Label1:
	return
.limit stack 7
.limit locals 0
.end method

Result: This is a random sentence.
Expect: This is a random sentence.
================================END 515 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, Array(Int, [2, 3]), Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, Array(Int, [2, 3]), class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 516 ================================
Input: Program([VarDecl(Id(x),[2,3],ArrayLiteral(ArrayLiteral(IntLiteral(1),IntLiteral(2),IntLiteral(3)),ArrayLiteral(IntLiteral(4),IntLiteral(5),IntLiteral(6)))),FuncDecl(Id(main)[],([VarDecl(Id(y),[3],ArrayLiteral(IntLiteral(0),IntLiteral(0),IntLiteral(0)))][Assign(Id(y),ArrayCell(Id(x),[IntLiteral(0)])),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(y),[IntLiteral(1)])])]),Return()]))])<EOF> || num:  516  |  True
--Jasmin Code  516  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x [[I

.method public static Main()V
.var 0 is y [I from Label0 to Label1
Label0:
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_0
	iastore
	dup
	iconst_1
	iconst_0
	iastore
	dup
	iconst_2
	iconst_0
	iastore
	astore_0
	getstatic MCClass.x [[I
	iconst_0
	aaload
	astore_0
	getstatic MCClass.x [[I
	iconst_1
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 4
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_1
	iastore
	dup
	iconst_1
	iconst_2
	iastore
	dup
	iconst_2
	iconst_3
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_4
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 6
	iastore
	aastore
	putstatic MCClass.x [[I
Label1:
	return
.limit stack 7
.limit locals 0
.end method

Result: 52
Expect: 52
================================END 516 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 517 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(300))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),Return()]))])<EOF> || num:  517  |  True
--Jasmin Code  517  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	sipush 300
	istore_0
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 300
Expect: 300
================================END 517 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 518 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(99.75))][CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(x)])]),Return()]))])<EOF> || num:  518  |  True
--Jasmin Code  518  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 99.75
	fstore_0
	fload_0
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 99.75
Expect: 99.75
================================END 518 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 519 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(false))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[Id(x)])]),Return()]))])<EOF> || num:  519  |  True
--Jasmin Code  519  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
Label0:
	iconst_0
	istore_0
	iload_0
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: false
Expect: false
================================END 519 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 520 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),StringLiteral(Local var))][CallStmt(Id(print),[Id(x)]),Return()]))])<EOF> || num:  520  |  True
--Jasmin Code  520  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Ljava/lang/String; from Label0 to Label1
Label0:
	ldc "Local var"
	astore_0
	aload_0
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: Local var
Expect: Local var
================================END 520 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 521 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),StringLiteral(Local var)),VarDecl(Id(y),IntLiteral(1)),VarDecl(Id(z),FloatLiteral(5.7))][CallStmt(Id(print),[Id(x)]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(y)])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(z)])]),Return()]))])<EOF> || num:  521  |  True
--Jasmin Code  521  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Ljava/lang/String; from Label0 to Label1
.var 1 is y I from Label0 to Label1
.var 2 is z F from Label0 to Label1
Label0:
	ldc "Local var"
	astore_0
	iconst_1
	istore_1
	ldc 5.7
	fstore_2
	aload_0
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	fload_2
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 3
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: Local var15.7
Expect: Local var15.7
================================END 521 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 522 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(IntLiteral(1),IntLiteral(2),IntLiteral(3)))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(2)])])]),Return()]))])<EOF> || num:  522  |  True
--Jasmin Code  522  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [I from Label0 to Label1
Label0:
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_1
	iastore
	dup
	iconst_1
	iconst_2
	iastore
	dup
	iconst_2
	iconst_3
	iastore
	astore_0
	aload_0
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 4
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 23
Expect: 23
================================END 522 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 523 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(FloatLiteral(0.01),FloatLiteral(2.0),FloatLiteral(38000000.0)))][CallStmt(Id(printStrLn),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(0)])])]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(2)])])]),Return()]))])<EOF> || num:  523  |  True
--Jasmin Code  523  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [F from Label0 to Label1
Label0:
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 0.01
	fastore
	dup
	iconst_1
	ldc 2.0
	fastore
	dup
	iconst_2
	ldc 38000000.0
	fastore
	astore_0
	aload_0
	iconst_0
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	aload_0
	iconst_1
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	aload_0
	iconst_2
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 4
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 0.01
2.0
3.8E7
Expect: 0.01
2.0
3.8E7
================================END 523 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 524 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(BooleanLiteral(true),BooleanLiteral(false)))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(1)])])]),Return()]))])<EOF> || num:  524  |  True
--Jasmin Code  524  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [Z from Label0 to Label1
Label0:
	iconst_2
	newarray boolean
	dup
	iconst_0
	iconst_1
	bastore
	dup
	iconst_1
	iconst_0
	bastore
	astore_0
	aload_0
	iconst_0
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 4
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truefalse
Expect: truefalse
================================END 524 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 525 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(StringLiteral(aaa),StringLiteral(bbb)))][CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1)])]),Return()]))])<EOF> || num:  525  |  True
--Jasmin Code  525  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [Ljava/lang/String; from Label0 to Label1
Label0:
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc "aaa"
	aastore
	dup
	iconst_1
	ldc "bbb"
	aastore
	astore_0
	aload_0
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 4
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: aaabbb
Expect: aaabbb
================================END 525 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 526 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(StringLiteral(aaa),StringLiteral(bbb))),VarDecl(Id(y),ArrayLiteral(IntLiteral(1),IntLiteral(2),IntLiteral(3)))][CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1)])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(y),[IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(y),[IntLiteral(2)])])]),Return()]))])<EOF> || num:  526  |  True
--Jasmin Code  526  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [Ljava/lang/String; from Label0 to Label1
.var 1 is y [I from Label0 to Label1
Label0:
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc "aaa"
	aastore
	dup
	iconst_1
	ldc "bbb"
	aastore
	astore_0
	iconst_3
	newarray int
	dup
	iconst_0
	iconst_1
	iastore
	dup
	iconst_1
	iconst_2
	iastore
	dup
	iconst_2
	iconst_3
	iastore
	astore_1
	aload_0
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 4
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: aaabbb23
Expect: aaabbb23
================================END 526 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 527 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5)),ArrayLiteral(IntLiteral(6),IntLiteral(80))))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])])]),Return()]))])<EOF> || num:  527  |  True
--Jasmin Code  527  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[I from Label0 to Label1
Label0:
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_2
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	aastore
	astore_0
	aload_0
	iconst_0
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 2005680
Expect: 2005680
================================END 527 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 528 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(FloatLiteral(1.1),FloatLiteral(2.2),FloatLiteral(3.3)),ArrayLiteral(FloatLiteral(4.4),FloatLiteral(5.5),FloatLiteral(6.6)),ArrayLiteral(FloatLiteral(7.7),FloatLiteral(8.8),FloatLiteral(9.9))))][CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(x),[IntLiteral(2),IntLiteral(2)])])]),Return()]))])<EOF> || num:  528  |  True
--Jasmin Code  528  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[F from Label0 to Label1
Label0:
	iconst_3
	anewarray [F
	dup
	iconst_0
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 1.1
	fastore
	dup
	iconst_1
	ldc 2.2
	fastore
	dup
	iconst_2
	ldc 3.3
	fastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 4.4
	fastore
	dup
	iconst_1
	ldc 5.5
	fastore
	dup
	iconst_2
	ldc 6.6
	fastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray float
	dup
	iconst_0
	ldc 7.7
	fastore
	dup
	iconst_1
	ldc 8.8
	fastore
	dup
	iconst_2
	ldc 9.9
	fastore
	aastore
	astore_0
	aload_0
	iconst_0
	aaload
	iconst_0
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_2
	aaload
	iconst_2
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 1.15.59.9
Expect: 1.15.59.9
================================END 528 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 529 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(BooleanLiteral(true),BooleanLiteral(false)),ArrayLiteral(BooleanLiteral(false),BooleanLiteral(true))))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])])]),Return()]))])<EOF> || num:  529  |  True
--Jasmin Code  529  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[Z from Label0 to Label1
Label0:
	iconst_2
	anewarray [Z
	dup
	iconst_0
	iconst_2
	newarray boolean
	dup
	iconst_0
	iconst_1
	bastore
	dup
	iconst_1
	iconst_0
	bastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray boolean
	dup
	iconst_0
	iconst_0
	bastore
	dup
	iconst_1
	iconst_1
	bastore
	aastore
	astore_0
	aload_0
	iconst_0
	aaload
	iconst_0
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truetrue
Expect: truetrue
================================END 529 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 530 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(StringLiteral(This),StringLiteral( is)),ArrayLiteral(StringLiteral( a),StringLiteral( random sentence.))))][CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(1)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])]),Return()]))])<EOF> || num:  530  |  True
--Jasmin Code  530  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[Ljava/lang/String; from Label0 to Label1
Label0:
	iconst_2
	anewarray [Ljava/lang/String;
	dup
	iconst_0
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc "This"
	aastore
	dup
	iconst_1
	ldc " is"
	aastore
	aastore
	dup
	iconst_1
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc " a"
	aastore
	dup
	iconst_1
	ldc " random sentence."
	aastore
	aastore
	astore_0
	aload_0
	iconst_0
	aaload
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: This is a random sentence.
Expect: This is a random sentence.
================================END 530 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 531 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(StringLiteral(This),StringLiteral( is)),ArrayLiteral(StringLiteral( a),StringLiteral( random sentence.)))),VarDecl(Id(y),[2,3],ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5)),ArrayLiteral(IntLiteral(6),IntLiteral(80))))][CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(1)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(0)])]),CallStmt(Id(print),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1)])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(y),[IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(y),[IntLiteral(0),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(y),[IntLiteral(1),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(y),[IntLiteral(1),IntLiteral(1)])])]),Return()]))])<EOF> || num:  531  |  True
--Jasmin Code  531  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[Ljava/lang/String; from Label0 to Label1
.var 1 is y [[I from Label0 to Label1
Label0:
	iconst_2
	anewarray [Ljava/lang/String;
	dup
	iconst_0
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc "This"
	aastore
	dup
	iconst_1
	ldc " is"
	aastore
	aastore
	dup
	iconst_1
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc " a"
	aastore
	dup
	iconst_1
	ldc " random sentence."
	aastore
	aastore
	astore_0
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_2
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	aastore
	astore_1
	aload_0
	iconst_0
	aaload
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_0
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_0
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_1
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_1
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: This is a random sentence.2005680
Expect: This is a random sentence.2005680
================================END 531 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, String, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, String, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 532 ================================
Input: Program([VarDecl(Id(x),StringLiteral(Local var)),FuncDecl(Id(main)[],([VarDecl(Id(y),IntLiteral(1)),VarDecl(Id(z),FloatLiteral(5.7))][CallStmt(Id(print),[Id(x)]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(y)])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(z)])]),Return()]))])<EOF> || num:  532  |  True
--Jasmin Code  532  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x Ljava/lang/String;

.method public static Main()V
.var 0 is y I from Label0 to Label1
.var 1 is z F from Label0 to Label1
Label0:
	iconst_1
	istore_0
	ldc 5.7
	fstore_1
	getstatic MCClass.x Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	fload_1
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	ldc "Local var"
	putstatic MCClass.x Ljava/lang/String;
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: Local var15.7
Expect: Local var15.7
================================END 532 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(x, String, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(x, String, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 533 ================================
Input: Program([VarDecl(Id(x),StringLiteral(Local var)),FuncDecl(Id(main)[],([VarDecl(Id(y),IntLiteral(1)),VarDecl(Id(x),FloatLiteral(5.7))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(y)])]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(x)])]),Return()]))])<EOF> || num:  533  |  True
--Jasmin Code  533  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static x Ljava/lang/String;

.method public static Main()V
.var 0 is y I from Label0 to Label1
.var 1 is x F from Label0 to Label1
Label0:
	iconst_1
	istore_0
	ldc 5.7
	fstore_1
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	fload_1
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	ldc "Local var"
	putstatic MCClass.x Ljava/lang/String;
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: 15.7
Expect: 15.7
================================END 533 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 534 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[BinaryOp(+,IntLiteral(1),IntLiteral(2))])]),Return()]))])<EOF> || num:  534  |  True
--Jasmin Code  534  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	iconst_1
	iconst_2
	iadd
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 3
Expect: 3
================================END 534 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 535 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[BinaryOp(-,IntLiteral(4),IntLiteral(6))])]),Return()]))])<EOF> || num:  535  |  True
--Jasmin Code  535  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	iconst_4
	bipush 6
	isub
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: -2
Expect: -2
================================END 535 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 536 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[BinaryOp(*,IntLiteral(5),IntLiteral(6))])]),Return()]))])<EOF> || num:  536  |  True
--Jasmin Code  536  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	iconst_5
	bipush 6
	imul
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 30
Expect: 30
================================END 536 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 537 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[BinaryOp(\,IntLiteral(101),IntLiteral(20))])]),Return()]))])<EOF> || num:  537  |  True
--Jasmin Code  537  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	bipush 101
	bipush 20
	idiv
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 5
Expect: 5
================================END 537 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 538 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_float),[BinaryOp(+.,FloatLiteral(1.0),FloatLiteral(2.0))])]),Return()]))])<EOF> || num:  538  |  True
--Jasmin Code  538  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	ldc 1.0
	ldc 2.0
	fadd
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 3.0
Expect: 3.0
================================END 538 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 539 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_float),[BinaryOp(-.,FloatLiteral(4.0),FloatLiteral(6.0))])]),Return()]))])<EOF> || num:  539  |  True
--Jasmin Code  539  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	ldc 4.0
	ldc 6.0
	fsub
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: -2.0
Expect: -2.0
================================END 539 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 540 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_float),[BinaryOp(*.,FloatLiteral(5.0),FloatLiteral(6.0))])]),Return()]))])<EOF> || num:  540  |  True
--Jasmin Code  540  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	ldc 5.0
	ldc 6.0
	fmul
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 30.0
Expect: 30.0
================================END 540 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 541 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_float),[BinaryOp(\.,FloatLiteral(100.0),FloatLiteral(20.0))])]),Return()]))])<EOF> || num:  541  |  True
--Jasmin Code  541  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	ldc 100.0
	ldc 20.0
	fdiv
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 5.0
Expect: 5.0
================================END 541 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 542 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[BinaryOp(%,IntLiteral(102),IntLiteral(20))])]),Return()]))])<EOF> || num:  542  |  True
--Jasmin Code  542  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	bipush 102
	bipush 20
	irem
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 2
Expect: 2
================================END 542 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 543 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(==,Id(x),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(==,IntLiteral(2),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(==,IntLiteral(3),IntLiteral(2))])]),Return()]))])<EOF> || num:  543  |  True
--Jasmin Code  543  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iload_0
	iconst_2
	if_icmpne Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_2
	iconst_2
	if_icmpne Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_3
	iconst_2
	if_icmpne Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: falsetruefalse
Expect: falsetruefalse
================================END 543 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 544 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(!=,Id(x),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(!=,IntLiteral(2),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(!=,IntLiteral(3),IntLiteral(2))])]),Return()]))])<EOF> || num:  544  |  True
--Jasmin Code  544  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iload_0
	iconst_2
	if_icmpeq Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_2
	iconst_2
	if_icmpeq Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_3
	iconst_2
	if_icmpeq Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truefalsetrue
Expect: truefalsetrue
================================END 544 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 545 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<,Id(x),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<,IntLiteral(2),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<,IntLiteral(3),IntLiteral(2))])]),Return()]))])<EOF> || num:  545  |  True
--Jasmin Code  545  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iload_0
	iconst_2
	if_icmpge Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_2
	iconst_2
	if_icmpge Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_3
	iconst_2
	if_icmpge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truefalsefalse
Expect: truefalsefalse
================================END 545 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 546 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>,Id(x),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>,IntLiteral(2),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>,IntLiteral(3),IntLiteral(2))])]),Return()]))])<EOF> || num:  546  |  True
--Jasmin Code  546  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iload_0
	iconst_2
	if_icmple Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_2
	iconst_2
	if_icmple Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_3
	iconst_2
	if_icmple Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: falsefalsetrue
Expect: falsefalsetrue
================================END 546 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 547 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<=,Id(x),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<=,IntLiteral(2),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<=,IntLiteral(3),IntLiteral(2))])]),Return()]))])<EOF> || num:  547  |  True
--Jasmin Code  547  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iload_0
	iconst_2
	if_icmpgt Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_2
	iconst_2
	if_icmpgt Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_3
	iconst_2
	if_icmpgt Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truetruefalse
Expect: truetruefalse
================================END 547 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 548 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>=,Id(x),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>=,IntLiteral(2),IntLiteral(2))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>=,IntLiteral(3),IntLiteral(2))])]),Return()]))])<EOF> || num:  548  |  True
--Jasmin Code  548  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iload_0
	iconst_2
	if_icmplt Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_2
	iconst_2
	if_icmplt Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_3
	iconst_2
	if_icmplt Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: falsetruetrue
Expect: falsetruetrue
================================END 548 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 549 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(1.0))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(=/=,Id(x),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(=/=,FloatLiteral(2.0),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(=/=,FloatLiteral(3.0),FloatLiteral(2.0))])]),Return()]))])<EOF> || num:  549  |  True
--Jasmin Code  549  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 1.0
	fstore_0
	fload_0
	ldc 2.0
	fcmpl
	ifeq Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 2.0
	ldc 2.0
	fcmpl
	ifeq Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 3.0
	ldc 2.0
	fcmpl
	ifeq Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truefalsetrue
Expect: truefalsetrue
================================END 549 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 550 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(1.0))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<.,Id(x),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<.,FloatLiteral(2.0),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<.,FloatLiteral(3.0),FloatLiteral(2.0))])]),Return()]))])<EOF> || num:  550  |  True
--Jasmin Code  550  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 1.0
	fstore_0
	fload_0
	ldc 2.0
	fcmpl
	ifge Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 2.0
	ldc 2.0
	fcmpl
	ifge Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 3.0
	ldc 2.0
	fcmpl
	ifge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truefalsefalse
Expect: truefalsefalse
================================END 550 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 551 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(1.0))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>.,Id(x),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>.,FloatLiteral(2.0),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>.,FloatLiteral(3.0),FloatLiteral(2.0))])]),Return()]))])<EOF> || num:  551  |  True
--Jasmin Code  551  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 1.0
	fstore_0
	fload_0
	ldc 2.0
	fcmpl
	ifle Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 2.0
	ldc 2.0
	fcmpl
	ifle Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 3.0
	ldc 2.0
	fcmpl
	ifle Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: falsefalsetrue
Expect: falsefalsetrue
================================END 551 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 552 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(1.0))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<=.,Id(x),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<=.,FloatLiteral(2.0),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(<=.,FloatLiteral(3.0),FloatLiteral(2.0))])]),Return()]))])<EOF> || num:  552  |  True
--Jasmin Code  552  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 1.0
	fstore_0
	fload_0
	ldc 2.0
	fcmpl
	ifgt Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 2.0
	ldc 2.0
	fcmpl
	ifgt Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 3.0
	ldc 2.0
	fcmpl
	ifgt Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truetruefalse
Expect: truetruefalse
================================END 552 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 553 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(1.0))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>=.,Id(x),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>=.,FloatLiteral(2.0),FloatLiteral(2.0))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(>=.,FloatLiteral(3.0),FloatLiteral(2.0))])]),Return()]))])<EOF> || num:  553  |  True
--Jasmin Code  553  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 1.0
	fstore_0
	fload_0
	ldc 2.0
	fcmpl
	iflt Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 2.0
	ldc 2.0
	fcmpl
	iflt Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc 3.0
	ldc 2.0
	fcmpl
	iflt Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: falsetruetrue
Expect: falsetruetrue
================================END 553 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 554 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(true)),VarDecl(Id(y),BooleanLiteral(false))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(&&,Id(x),Id(x))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(&&,Id(x),Id(y))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(&&,Id(y),Id(x))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(&&,Id(y),Id(y))])]),Return()]))])<EOF> || num:  554  |  True
--Jasmin Code  554  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
.var 1 is y Z from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_0
	istore_1
	iload_0
	ifeq Label2
	iload_0
	ifeq Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	ifeq Label4
	iload_1
	ifeq Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	ifeq Label6
	iload_0
	ifeq Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	ifeq Label8
	iload_1
	ifeq Label8
	iconst_1
	goto Label9
Label8:
	iconst_0
Label9:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truefalsefalsefalse
Expect: truefalsefalsefalse
================================END 554 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 555 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(true)),VarDecl(Id(y),BooleanLiteral(false))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(||,Id(x),Id(x))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(||,Id(x),Id(y))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(||,Id(y),Id(x))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(||,Id(y),Id(y))])]),Return()]))])<EOF> || num:  555  |  True
--Jasmin Code  555  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
.var 1 is y Z from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_0
	istore_1
	iload_0
	ifne Label2
	iload_0
	ifne Label2
	iconst_0
	goto Label3
Label2:
	iconst_1
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	ifne Label4
	iload_1
	ifne Label4
	iconst_0
	goto Label5
Label4:
	iconst_1
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	ifne Label6
	iload_0
	ifne Label6
	iconst_0
	goto Label7
Label6:
	iconst_1
Label7:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	ifne Label8
	iload_1
	ifne Label8
	iconst_0
	goto Label9
Label8:
	iconst_1
Label9:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: truetruetruefalse
Expect: truetruetruefalse
================================END 555 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
	 OldSymbol(foo, MType([], Bool), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
	 Symbol(foo, MType([], Bool), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 556 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(false))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(&&,CallExpr(Id(foo),[]),Id(x))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(&&,Id(x),CallExpr(Id(foo),[]))])]),Return()])),FuncDecl(Id(foo)[],([][CallStmt(Id(print),[StringLiteral(TEST)]),Return(BooleanLiteral(true))]))])<EOF> || num:  556  |  True
--Jasmin Code  556  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
Label0:
	iconst_0
	istore_0
	invokestatic MCClass/foo()Z
	ifeq Label2
	iload_0
	ifeq Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	ifeq Label4
	invokestatic MCClass/foo()Z
	ifeq Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static foo()Z
Label0:
	ldc "TEST"
	invokestatic io/print(Ljava/lang/String;)V
	iconst_1
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: TESTfalsefalse
Expect: TESTfalsefalse
================================END 556 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
	 OldSymbol(foo, MType([], Bool), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
	 Symbol(foo, MType([], Bool), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 557 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(true))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(||,CallExpr(Id(foo),[]),Id(x))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(||,Id(x),CallExpr(Id(foo),[]))])]),Return()])),FuncDecl(Id(foo)[],([][CallStmt(Id(print),[StringLiteral(TEST)]),Return(BooleanLiteral(false))]))])<EOF> || num:  557  |  True
--Jasmin Code  557  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
Label0:
	iconst_1
	istore_0
	invokestatic MCClass/foo()Z
	ifne Label2
	iload_0
	ifne Label2
	iconst_0
	goto Label3
Label2:
	iconst_1
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	ifne Label4
	invokestatic MCClass/foo()Z
	ifne Label4
	iconst_0
	goto Label5
Label4:
	iconst_1
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static foo()Z
Label0:
	ldc "TEST"
	invokestatic io/print(Ljava/lang/String;)V
	iconst_0
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: TESTtruetrue
Expect: TESTtruetrue
================================END 557 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 558 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1)),VarDecl(Id(y),IntLiteral(2))][CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[BinaryOp(-,BinaryOp(+,IntLiteral(10),IntLiteral(2)),BinaryOp(\,BinaryOp(*,IntLiteral(3),IntLiteral(4)),IntLiteral(2)))])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[BinaryOp(+,IntLiteral(10),BinaryOp(\,BinaryOp(*,BinaryOp(-,IntLiteral(2),IntLiteral(3)),IntLiteral(4)),IntLiteral(2)))])]),Return()]))])<EOF> || num:  558  |  True
--Jasmin Code  558  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_2
	istore_1
	bipush 10
	iconst_2
	iadd
	iconst_3
	iconst_4
	imul
	iconst_2
	idiv
	isub
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	bipush 10
	iconst_2
	iconst_3
	isub
	iconst_4
	imul
	iconst_2
	idiv
	iadd
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 3
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 6
8
Expect: 6
8
================================END 558 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
	 OldSymbol(foo, MType([], Bool), Function, class=MCClass)
	 OldSymbol(foo2, MType([], Bool), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
	 Symbol(foo, MType([], Bool), class=MCClass)
	 Symbol(foo2, MType([], Bool), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 559 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[BinaryOp(||,BinaryOp(&&,CallExpr(Id(foo2),[]),CallExpr(Id(foo),[])),BinaryOp(&&,CallExpr(Id(foo),[]),CallExpr(Id(foo2),[])))])]),Return()])),FuncDecl(Id(foo)[],([][CallStmt(Id(print),[StringLiteral(foo(),)]),Return(BooleanLiteral(true))])),FuncDecl(Id(foo2)[],([][CallStmt(Id(print),[StringLiteral(foo2(),)]),Return(BooleanLiteral(false))]))])<EOF> || num:  559  |  True
--Jasmin Code  559  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	invokestatic MCClass/foo2()Z
	ifeq Label4
	invokestatic MCClass/foo()Z
	ifeq Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	ifne Label2
	invokestatic MCClass/foo()Z
	ifeq Label6
	invokestatic MCClass/foo2()Z
	ifeq Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	ifne Label2
	iconst_0
	goto Label3
Label2:
	iconst_1
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static foo()Z
Label0:
	ldc "foo(),"
	invokestatic io/print(Ljava/lang/String;)V
	iconst_1
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 1
.limit locals 0
.end method

.method public static foo2()Z
Label0:
	ldc "foo2(),"
	invokestatic io/print(Ljava/lang/String;)V
	iconst_0
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: foo2(),foo(),foo2(),false
Expect: foo2(),foo(),foo2(),false
================================END 559 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 560 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(99))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[UnaryOp(-,Id(x))])]),Return()]))])<EOF> || num:  560  |  True
--Jasmin Code  560  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	bipush 99
	istore_0
	iload_0
	ineg
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: -99
Expect: -99
================================END 560 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 561 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(4.3))][CallStmt(Id(print),[CallExpr(Id(string_of_float),[UnaryOp(-.,Id(x))])]),Return()]))])<EOF> || num:  561  |  True
--Jasmin Code  561  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 4.3
	fstore_0
	fload_0
	fneg
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: -4.3
Expect: -4.3
================================END 561 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 562 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(false))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[UnaryOp(!,Id(x))])]),Return()]))])<EOF> || num:  562  |  True
--Jasmin Code  562  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
Label0:
	iconst_0
	istore_0
	iload_0
	ifne Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: true
Expect: true
================================END 562 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 563 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024)))))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(0),IntLiteral(2)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(1),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(1),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(1),IntLiteral(2)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(2),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(2),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(0),IntLiteral(2),IntLiteral(2)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(0),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(0),IntLiteral(2)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(1),IntLiteral(2)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(2),IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(2),IntLiteral(1)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[IntLiteral(1),IntLiteral(2),IntLiteral(2)])])]),Return()]))])<EOF> || num:  563  |  True
--Jasmin Code  563  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[[I from Label0 to Label1
Label0:
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_0
	aload_0
	iconst_0
	aaload
	iconst_0
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_0
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_0
	aaload
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_1
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_1
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_1
	aaload
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_2
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_2
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_2
	aaload
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_0
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_0
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_0
	aaload
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_1
	aaload
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_2
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_2
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_2
	aaload
	iconst_2
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 10
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 20051868079101112915287496081161024
Expect: 20051868079101112915287496081161024
================================END 563 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 564 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(false))][CallStmt(Id(print),[CallExpr(Id(string_of_bool),[UnaryOp(!,BinaryOp(>.,CallExpr(Id(float_to_int),[UnaryOp(-,IntLiteral(7))]),UnaryOp(-.,FloatLiteral(7.5))))])]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[UnaryOp(!,BinaryOp(<.,CallExpr(Id(float_to_int),[UnaryOp(-,IntLiteral(7))]),UnaryOp(-.,FloatLiteral(7.5))))])]),Return()]))])<EOF> || num:  564  |  True
--Jasmin Code  564  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
Label0:
	iconst_0
	istore_0
	bipush 7
	ineg
	invokestatic io/float_to_int(I)F
	ldc 7.5
	fneg
	fcmpl
	ifle Label2
	iconst_1
	goto Label3
Label2:
	iconst_0
Label3:
	ifne Label4
	iconst_1
	goto Label5
Label4:
	iconst_0
Label5:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	bipush 7
	ineg
	invokestatic io/float_to_int(I)F
	ldc 7.5
	fneg
	fcmpl
	ifge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	ifne Label8
	iconst_1
	goto Label9
Label8:
	iconst_0
Label9:
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: falsetrue
Expect: falsetrue
================================END 564 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 565 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(IntLiteral(1),IntLiteral(2)),ArrayLiteral(IntLiteral(3),IntLiteral(4))))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[BinaryOp(-,IntLiteral(2),IntLiteral(1)),UnaryOp(-,UnaryOp(-,IntLiteral(1)))])])]),Return()]))])<EOF> || num:  565  |  True
--Jasmin Code  565  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[I from Label0 to Label1
Label0:
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_1
	iastore
	dup
	iconst_1
	iconst_2
	iastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_3
	iastore
	dup
	iconst_1
	iconst_4
	iastore
	aastore
	astore_0
	aload_0
	iconst_2
	iconst_1
	isub
	aaload
	iconst_1
	ineg
	ineg
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 4
Expect: 4
================================END 565 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 566 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),ArrayLiteral(ArrayLiteral(IntLiteral(1),IntLiteral(2)),ArrayLiteral(IntLiteral(3),IntLiteral(4))))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[UnaryOp(-,CallExpr(Id(int_of_float),[UnaryOp(-.,FloatLiteral(1.0))])),UnaryOp(-,UnaryOp(-,IntLiteral(1)))])])]),Return()]))])<EOF> || num:  566  |  True
--Jasmin Code  566  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x [[I from Label0 to Label1
Label0:
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_1
	iastore
	dup
	iconst_1
	iconst_2
	iastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_3
	iastore
	dup
	iconst_1
	iconst_4
	iastore
	aastore
	astore_0
	aload_0
	ldc 1.0
	fneg
	invokestatic io/int_of_float(F)I
	ineg
	aaload
	iconst_1
	ineg
	ineg
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 4
Expect: 4
================================END 566 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 567 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(99))][Assign(Id(x),IntLiteral(10)),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),Return()]))])<EOF> || num:  567  |  True
--Jasmin Code  567  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	bipush 99
	istore_0
	bipush 10
	istore_0
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 10
Expect: 10
================================END 567 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 568 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),FloatLiteral(99.7))][Assign(Id(x),FloatLiteral(10.1)),CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(x)])]),Return()]))])<EOF> || num:  568  |  True
--Jasmin Code  568  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x F from Label0 to Label1
Label0:
	ldc 99.7
	fstore_0
	ldc 10.1
	fstore_0
	fload_0
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 10.1
Expect: 10.1
================================END 568 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 569 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(true)),VarDecl(Id(y),StringLiteral())][Assign(Id(x),BooleanLiteral(false)),Assign(Id(y),StringLiteral(Hello)),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[Id(x)])]),CallStmt(Id(print),[Id(y)]),Return()]))])<EOF> || num:  569  |  True
--Jasmin Code  569  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
.var 1 is y Ljava/lang/String; from Label0 to Label1
Label0:
	iconst_1
	istore_0
	ldc ""
	astore_1
	iconst_0
	istore_0
	ldc "Hello"
	astore_1
	iload_0
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: falseHello
Expect: falseHello
================================END 569 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 570 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(2)),VarDecl(Id(y),IntLiteral(3)),VarDecl(Id(temp),IntLiteral(0))][Assign(Id(temp),Id(x)),Assign(Id(x),Id(y)),Assign(Id(y),Id(temp)),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(y)])]),Return()]))])<EOF> || num:  570  |  True
--Jasmin Code  570  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
.var 2 is temp I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_0
	istore_2
	iload_0
	istore_2
	iload_1
	istore_0
	iload_2
	istore_1
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 1
.limit locals 3
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 32
Expect: 32
================================END 570 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 571 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(64))][Assign(Id(x),BinaryOp(+,Id(x),IntLiteral(1))),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),Return()]))])<EOF> || num:  571  |  True
--Jasmin Code  571  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
Label0:
	bipush 64
	istore_0
	iload_0
	iconst_1
	iadd
	istore_0
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 65
Expect: 65
================================END 571 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 572 ================================
Input: Program([FuncDecl(Id(main)[],([][If(BooleanLiteral(true),[],[CallStmt(Id(print),[StringLiteral(TRUE)])])Else([],[]),Return()]))])<EOF> || num:  572  |  True
--Jasmin Code  572  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
	iconst_1
	ifeq Label4
Label3:
	ldc "TRUE"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label2
Label4:
Label2:
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: TRUE
Expect: TRUE
================================END 572 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 573 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),BooleanLiteral(true))][If(UnaryOp(!,Id(x)),[],[CallStmt(Id(print),[StringLiteral(1)])])Else([],[CallStmt(Id(print),[StringLiteral(2)])]),Return()]))])<EOF> || num:  573  |  True
--Jasmin Code  573  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x Z from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iload_0
	ifne Label3
	iconst_1
	goto Label4
Label3:
	iconst_0
Label4:
	ifeq Label6
Label5:
	ldc "1"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label2
Label6:
Label7:
	ldc "2"
	invokestatic io/print(Ljava/lang/String;)V
Label8:
Label2:
	return
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 2
Expect: 2
================================END 573 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 574 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1)),VarDecl(Id(y),IntLiteral(2))][If(BinaryOp(!=,Id(x),IntLiteral(1)),[],[CallStmt(Id(print),[StringLiteral(1)])])ElseIf(BinaryOp(==,Id(y),IntLiteral(2)),[],[CallStmt(Id(print),[StringLiteral(HERE)])])Else([],[CallStmt(Id(print),[StringLiteral(2)])]),Return()]))])<EOF> || num:  574  |  True
--Jasmin Code  574  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_2
	istore_1
	iload_0
	iconst_1
	if_icmpeq Label3
	iconst_1
	goto Label4
Label3:
	iconst_0
Label4:
	ifeq Label6
Label5:
	ldc "1"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label2
Label6:
	iload_1
	iconst_2
	if_icmpne Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label10
Label9:
	ldc "HERE"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label2
Label10:
Label11:
	ldc "2"
	invokestatic io/print(Ljava/lang/String;)V
Label12:
Label2:
	return
Label1:
	return
.limit stack 2
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: HERE
Expect: HERE
================================END 574 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 575 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1)),VarDecl(Id(y),IntLiteral(2))][If(BinaryOp(==,Id(x),IntLiteral(1)),[],[CallStmt(Id(print),[StringLiteral(1)]),If(BinaryOp(==,Id(y),IntLiteral(2)),[],[CallStmt(Id(print),[StringLiteral(HERE)])])Else([],[])])Else([],[CallStmt(Id(print),[StringLiteral(2)])]),Return()]))])<EOF> || num:  575  |  True
--Jasmin Code  575  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_2
	istore_1
	iload_0
	iconst_1
	if_icmpne Label3
	iconst_1
	goto Label4
Label3:
	iconst_0
Label4:
	ifeq Label6
Label5:
	ldc "1"
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	iconst_2
	if_icmpne Label8
	iconst_1
	goto Label9
Label8:
	iconst_0
Label9:
	ifeq Label11
Label10:
	ldc "HERE"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label7
Label11:
Label7:
	goto Label2
Label6:
Label12:
	ldc "2"
	invokestatic io/print(Ljava/lang/String;)V
Label13:
Label2:
	return
Label1:
	return
.limit stack 2
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 1HERE
Expect: 1HERE
================================END 575 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 576 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1)),VarDecl(Id(y),IntLiteral(2))][If(BinaryOp(==,Id(x),IntLiteral(1)),[VarDecl(Id(x),IntLiteral(2))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),If(BinaryOp(==,Id(x),IntLiteral(2)),[],[CallStmt(Id(print),[StringLiteral(HERE)])])Else([],[])])Else([],[CallStmt(Id(print),[StringLiteral(abc)])]),Return()]))])<EOF> || num:  576  |  True
--Jasmin Code  576  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_2
	istore_1
	iload_0
	iconst_1
	if_icmpne Label3
	iconst_1
	goto Label4
Label3:
	iconst_0
Label4:
	ifeq Label6
.var 2 is x I from Label5 to Label6
Label5:
	iconst_2
	istore_2
	iload_2
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_2
	iconst_2
	if_icmpne Label8
	iconst_1
	goto Label9
Label8:
	iconst_0
Label9:
	ifeq Label11
Label10:
	ldc "HERE"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label7
Label11:
Label7:
	goto Label2
Label6:
Label12:
	ldc "abc"
	invokestatic io/print(Ljava/lang/String;)V
Label13:
Label2:
	return
Label1:
	return
.limit stack 2
.limit locals 3
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 2HERE
Expect: 2HERE
================================END 576 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 577 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(3)),VarDecl(Id(y),IntLiteral(2))][If(BinaryOp(==,Id(x),IntLiteral(1)),[VarDecl(Id(x),IntLiteral(2))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),If(BinaryOp(==,Id(x),IntLiteral(2)),[],[CallStmt(Id(print),[StringLiteral(A)])])Else([],[])])Else([VarDecl(Id(y),IntLiteral(3))],[If(BinaryOp(==,Id(y),IntLiteral(2)),[],[CallStmt(Id(print),[StringLiteral(B)])])Else([],[CallStmt(Id(print),[StringLiteral(C)])]),CallStmt(Id(print),[StringLiteral(abc)])]),Return()]))])<EOF> || num:  577  |  True
--Jasmin Code  577  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
Label0:
	iconst_3
	istore_0
	iconst_2
	istore_1
	iload_0
	iconst_1
	if_icmpne Label3
	iconst_1
	goto Label4
Label3:
	iconst_0
Label4:
	ifeq Label6
.var 2 is x I from Label5 to Label6
Label5:
	iconst_2
	istore_2
	iload_2
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_2
	iconst_2
	if_icmpne Label8
	iconst_1
	goto Label9
Label8:
	iconst_0
Label9:
	ifeq Label11
Label10:
	ldc "A"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label7
Label11:
Label7:
	goto Label2
Label6:
.var 2 is y I from Label12 to Label13
Label12:
	iconst_3
	istore_2
	iload_2
	iconst_2
	if_icmpne Label15
	iconst_1
	goto Label16
Label15:
	iconst_0
Label16:
	ifeq Label18
Label17:
	ldc "B"
	invokestatic io/print(Ljava/lang/String;)V
	goto Label14
Label18:
Label19:
	ldc "C"
	invokestatic io/print(Ljava/lang/String;)V
Label20:
Label14:
	ldc "abc"
	invokestatic io/print(Ljava/lang/String;)V
Label13:
Label2:
	return
Label1:
	return
.limit stack 2
.limit locals 3
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: Cabc
Expect: Cabc
================================END 577 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 578 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(x),IntLiteral(1)),VarDecl(Id(y),IntLiteral(2))][CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),If(BinaryOp(==,Id(x),IntLiteral(1)),[VarDecl(Id(x),IntLiteral(2))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),If(BinaryOp(==,Id(x),IntLiteral(2)),[VarDecl(Id(x),IntLiteral(3))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])]),If(BinaryOp(==,Id(x),IntLiteral(3)),[VarDecl(Id(x),IntLiteral(4))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(x)])])])Else([],[])])Else([],[])])Else([],[]),Return()]))])<EOF> || num:  578  |  True
--Jasmin Code  578  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_2
	istore_1
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	iconst_1
	if_icmpne Label3
	iconst_1
	goto Label4
Label3:
	iconst_0
Label4:
	ifeq Label6
.var 2 is x I from Label5 to Label6
Label5:
	iconst_2
	istore_2
	iload_2
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_2
	iconst_2
	if_icmpne Label8
	iconst_1
	goto Label9
Label8:
	iconst_0
Label9:
	ifeq Label11
.var 3 is x I from Label10 to Label11
Label10:
	iconst_3
	istore_3
	iload_3
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_3
	iconst_3
	if_icmpne Label13
	iconst_1
	goto Label14
Label13:
	iconst_0
Label14:
	ifeq Label16
.var 4 is x I from Label15 to Label16
Label15:
	iconst_4
	istore 4
	iload 4
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	goto Label12
Label16:
Label12:
	goto Label7
Label11:
Label7:
	goto Label2
Label6:
Label2:
	return
Label1:
	return
.limit stack 2
.limit locals 5
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 1234
Expect: 1234
================================END 578 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 579 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(i),IntLiteral(1))][For(Id(i),IntLiteral(0),BinaryOp(<,Id(i),IntLiteral(10)),IntLiteral(2),[],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(i)])])]),Return()]))])<EOF> || num:  579  |  True
--Jasmin Code  579  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is i I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_0
	istore_0
Label6:
	iload_0
	bipush 10
	if_icmpge Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
Label4:
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label5:
Label2:
	iload_0
	iconst_2
	iadd
	istore_0
	goto Label6
Label3:
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 02468
Expect: 02468
================================END 579 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 580 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(100))][For(Id(i),IntLiteral(0),BinaryOp(<,Id(i),Id(length)),IntLiteral(1),[VarDecl(Id(j),IntLiteral(100))],[For(Id(j),IntLiteral(0),BinaryOp(<,Id(j),Id(width)),IntLiteral(1),[VarDecl(Id(k),IntLiteral(100))],[For(Id(k),IntLiteral(0),BinaryOp(<,Id(k),Id(height)),IntLiteral(1),[],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[Id(i),Id(j),Id(k)])])])])])]),Return()]))])<EOF> || num:  580  |  True
--Jasmin Code  580  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	bipush 100
	istore 4
	iconst_0
	istore 4
Label6:
	iload 4
	iload_0
	if_icmpge Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
.var 5 is j I from Label4 to Label5
Label4:
	bipush 100
	istore 5
	iconst_0
	istore 5
Label13:
	iload 5
	iload_1
	if_icmpge Label14
	iconst_1
	goto Label15
Label14:
	iconst_0
Label15:
	ifeq Label10
.var 6 is k I from Label11 to Label12
Label11:
	bipush 100
	istore 6
	iconst_0
	istore 6
Label20:
	iload 6
	iload_2
	if_icmpge Label21
	iconst_1
	goto Label22
Label21:
	iconst_0
Label22:
	ifeq Label17
Label18:
	aload_3
	iload 4
	aaload
	iload 5
	aaload
	iload 6
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label19:
Label16:
	iload 6
	iconst_1
	iadd
	istore 6
	goto Label20
Label17:
Label12:
Label9:
	iload 5
	iconst_1
	iadd
	istore 5
	goto Label13
Label10:
Label5:
Label2:
	iload 4
	iconst_1
	iadd
	istore 4
	goto Label6
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 20051868079101112915287496081161024
Expect: 20051868079101112915287496081161024
================================END 580 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 581 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(100))][For(Id(i),BinaryOp(-,Id(length),IntLiteral(1)),BinaryOp(>=,Id(i),IntLiteral(0)),UnaryOp(-,IntLiteral(1)),[VarDecl(Id(j),IntLiteral(100))],[For(Id(j),BinaryOp(-,Id(width),IntLiteral(1)),BinaryOp(>=,Id(j),IntLiteral(0)),UnaryOp(-,IntLiteral(1)),[VarDecl(Id(k),IntLiteral(100))],[For(Id(k),BinaryOp(-,Id(height),IntLiteral(1)),BinaryOp(>=,Id(k),IntLiteral(0)),UnaryOp(-,IntLiteral(1)),[],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[Id(i),Id(j),Id(k)])])])])])]),Return()]))])<EOF> || num:  581  |  True
--Jasmin Code  581  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	bipush 100
	istore 4
	iload_0
	iconst_1
	isub
	istore 4
Label6:
	iload 4
	iconst_0
	if_icmplt Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
.var 5 is j I from Label4 to Label5
Label4:
	bipush 100
	istore 5
	iload_1
	iconst_1
	isub
	istore 5
Label13:
	iload 5
	iconst_0
	if_icmplt Label14
	iconst_1
	goto Label15
Label14:
	iconst_0
Label15:
	ifeq Label10
.var 6 is k I from Label11 to Label12
Label11:
	bipush 100
	istore 6
	iload_2
	iconst_1
	isub
	istore 6
Label20:
	iload 6
	iconst_0
	if_icmplt Label21
	iconst_1
	goto Label22
Label21:
	iconst_0
Label22:
	ifeq Label17
Label18:
	aload_3
	iload 4
	aaload
	iload 5
	aaload
	iload 6
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label19:
Label16:
	iload 6
	iconst_1
	ineg
	iadd
	istore 6
	goto Label20
Label17:
Label12:
Label9:
	iload 5
	iconst_1
	ineg
	iadd
	istore 5
	goto Label13
Label10:
Label5:
Label2:
	iload 4
	iconst_1
	ineg
	iadd
	istore 4
	goto Label6
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 10241681604972815912111079806185200
Expect: 10241681604972815912111079806185200
================================END 581 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 582 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(100))][For(Id(i),IntLiteral(0),BinaryOp(<,Id(i),Id(length)),IntLiteral(1),[VarDecl(Id(j),IntLiteral(100))],[For(Id(j),IntLiteral(0),BinaryOp(<,Id(j),Id(width)),IntLiteral(1),[VarDecl(Id(k),IntLiteral(100))],[If(BinaryOp(==,Id(j),IntLiteral(1)),[],[Continue()])Else([],[]),For(Id(k),IntLiteral(0),BinaryOp(<,Id(k),Id(height)),IntLiteral(1),[],[If(BinaryOp(==,Id(k),IntLiteral(1)),[],[Continue()])Else([],[]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[Id(i),Id(j),Id(k)])])])])])]),Return()]))])<EOF> || num:  582  |  True
--Jasmin Code  582  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	bipush 100
	istore 4
	iconst_0
	istore 4
Label6:
	iload 4
	iload_0
	if_icmpge Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
.var 5 is j I from Label4 to Label5
Label4:
	bipush 100
	istore 5
	iconst_0
	istore 5
Label13:
	iload 5
	iload_1
	if_icmpge Label14
	iconst_1
	goto Label15
Label14:
	iconst_0
Label15:
	ifeq Label10
.var 6 is k I from Label11 to Label12
Label11:
	bipush 100
	istore 6
	iload 5
	iconst_1
	if_icmpne Label17
	iconst_1
	goto Label18
Label17:
	iconst_0
Label18:
	ifeq Label20
Label19:
	goto Label9
	goto Label16
Label20:
Label16:
	iconst_0
	istore 6
Label25:
	iload 6
	iload_2
	if_icmpge Label26
	iconst_1
	goto Label27
Label26:
	iconst_0
Label27:
	ifeq Label22
Label23:
	iload 6
	iconst_1
	if_icmpne Label29
	iconst_1
	goto Label30
Label29:
	iconst_0
Label30:
	ifeq Label32
Label31:
	goto Label21
	goto Label28
Label32:
Label28:
	aload_3
	iload 4
	aaload
	iload 5
	aaload
	iload 6
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label24:
Label21:
	iload 6
	iconst_1
	iadd
	istore 6
	goto Label25
Label22:
Label12:
Label9:
	iload 5
	iconst_1
	iadd
	istore 5
	goto Label13
Label10:
Label5:
Label2:
	iload 4
	iconst_1
	iadd
	istore 4
	goto Label6
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 200181012928811024
Expect: 200181012928811024
================================END 582 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 583 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(100))][For(Id(i),IntLiteral(0),BinaryOp(<,Id(i),Id(length)),IntLiteral(1),[VarDecl(Id(j),IntLiteral(100))],[For(Id(j),IntLiteral(0),BinaryOp(<,Id(j),Id(width)),IntLiteral(1),[VarDecl(Id(k),IntLiteral(100))],[If(BinaryOp(==,Id(j),IntLiteral(2)),[],[Break()])Else([],[]),For(Id(k),IntLiteral(0),BinaryOp(<,Id(k),Id(height)),IntLiteral(1),[],[If(BinaryOp(==,Id(k),IntLiteral(1)),[],[Break()])Else([],[]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[Id(i),Id(j),Id(k)])])])])])]),Return()]))])<EOF> || num:  583  |  True
--Jasmin Code  583  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	bipush 100
	istore 4
	iconst_0
	istore 4
Label6:
	iload 4
	iload_0
	if_icmpge Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
.var 5 is j I from Label4 to Label5
Label4:
	bipush 100
	istore 5
	iconst_0
	istore 5
Label13:
	iload 5
	iload_1
	if_icmpge Label14
	iconst_1
	goto Label15
Label14:
	iconst_0
Label15:
	ifeq Label10
.var 6 is k I from Label11 to Label12
Label11:
	bipush 100
	istore 6
	iload 5
	iconst_2
	if_icmpne Label17
	iconst_1
	goto Label18
Label17:
	iconst_0
Label18:
	ifeq Label20
Label19:
	goto Label10
	goto Label16
Label20:
Label16:
	iconst_0
	istore 6
Label25:
	iload 6
	iload_2
	if_icmpge Label26
	iconst_1
	goto Label27
Label26:
	iconst_0
Label27:
	ifeq Label22
Label23:
	iload 6
	iconst_1
	if_icmpne Label29
	iconst_1
	goto Label30
Label29:
	iconst_0
Label30:
	ifeq Label32
Label31:
	goto Label22
	goto Label28
Label32:
Label28:
	aload_3
	iload 4
	aaload
	iload 5
	aaload
	iload 6
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label24:
Label21:
	iload 6
	iconst_1
	iadd
	istore 6
	goto Label25
Label22:
Label12:
Label9:
	iload 5
	iconst_1
	iadd
	istore 5
	goto Label13
Label10:
Label5:
Label2:
	iload 4
	iconst_1
	iadd
	istore 4
	goto Label6
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 200697
Expect: 200697
================================END 583 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 584 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(100))][For(Id(i),IntLiteral(0),BinaryOp(<,Id(i),Id(length)),IntLiteral(1),[VarDecl(Id(j),IntLiteral(100))],[For(Id(j),IntLiteral(0),BinaryOp(<,Id(j),Id(width)),IntLiteral(1),[VarDecl(Id(k),IntLiteral(100))],[If(BinaryOp(==,Id(j),IntLiteral(1)),[],[Break()])Else([],[]),For(Id(k),IntLiteral(0),BinaryOp(<,Id(k),Id(height)),IntLiteral(1),[],[If(BinaryOp(==,Id(k),IntLiteral(1)),[],[Continue()])Else([],[]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[Id(i),Id(j),Id(k)])])])])])]),Return()]))])<EOF> || num:  584  |  True
--Jasmin Code  584  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	bipush 100
	istore 4
	iconst_0
	istore 4
Label6:
	iload 4
	iload_0
	if_icmpge Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
.var 5 is j I from Label4 to Label5
Label4:
	bipush 100
	istore 5
	iconst_0
	istore 5
Label13:
	iload 5
	iload_1
	if_icmpge Label14
	iconst_1
	goto Label15
Label14:
	iconst_0
Label15:
	ifeq Label10
.var 6 is k I from Label11 to Label12
Label11:
	bipush 100
	istore 6
	iload 5
	iconst_1
	if_icmpne Label17
	iconst_1
	goto Label18
Label17:
	iconst_0
Label18:
	ifeq Label20
Label19:
	goto Label10
	goto Label16
Label20:
Label16:
	iconst_0
	istore 6
Label25:
	iload 6
	iload_2
	if_icmpge Label26
	iconst_1
	goto Label27
Label26:
	iconst_0
Label27:
	ifeq Label22
Label23:
	iload 6
	iconst_1
	if_icmpne Label29
	iconst_1
	goto Label30
Label29:
	iconst_0
Label30:
	ifeq Label32
Label31:
	goto Label21
	goto Label28
Label32:
Label28:
	aload_3
	iload 4
	aaload
	iload 5
	aaload
	iload 6
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label24:
Label21:
	iload 6
	iconst_1
	iadd
	istore 6
	goto Label25
Label22:
Label12:
Label9:
	iload 5
	iconst_1
	iadd
	istore 5
	goto Label13
Label10:
Label5:
Label2:
	iload 4
	iconst_1
	iadd
	istore 4
	goto Label6
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 20018928
Expect: 20018928
================================END 584 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 585 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(i),IntLiteral(1)),VarDecl(Id(j),IntLiteral(1))][For(Id(i),IntLiteral(0),BinaryOp(<,Id(i),IntLiteral(10)),IntLiteral(2),[VarDecl(Id(i),IntLiteral(7))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(i)])]),For(Id(j),IntLiteral(0),BinaryOp(<,Id(j),IntLiteral(2)),IntLiteral(1),[VarDecl(Id(j),IntLiteral(8))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(j)])])])]),Return()]))])<EOF> || num:  585  |  True
--Jasmin Code  585  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is i I from Label0 to Label1
.var 1 is j I from Label0 to Label1
Label0:
	iconst_1
	istore_0
	iconst_1
	istore_1
	iconst_0
	istore_0
Label6:
	iload_0
	bipush 10
	if_icmpge Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
.var 2 is i I from Label4 to Label5
Label4:
	bipush 7
	istore_2
	iload_2
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_0
	istore_1
Label13:
	iload_1
	iconst_2
	if_icmpge Label14
	iconst_1
	goto Label15
Label14:
	iconst_0
Label15:
	ifeq Label10
.var 3 is j I from Label11 to Label12
Label11:
	bipush 8
	istore_3
	iload_3
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label12:
Label9:
	iload_1
	iconst_1
	iadd
	istore_1
	goto Label13
Label10:
Label5:
Label2:
	iload_0
	iconst_2
	iadd
	istore_0
	goto Label6
Label3:
	return
Label1:
	return
.limit stack 2
.limit locals 4
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 788788788788788
Expect: 788788788788788
================================END 585 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 586 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(i),IntLiteral(0))][While(BinaryOp(<,Id(i),IntLiteral(10)),[],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(i)])]),Assign(Id(i),BinaryOp(+,Id(i),IntLiteral(2)))]),Return()]))])<EOF> || num:  586  |  True
--Jasmin Code  586  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is i I from Label0 to Label1
Label0:
	iconst_0
	istore_0
Label2:
	iload_0
	bipush 10
	if_icmpge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	ifeq Label3
Label4:
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	iconst_2
	iadd
	istore_0
Label5:
	goto Label2
Label3:
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 02468
Expect: 02468
================================END 586 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 587 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(0))][While(BinaryOp(<,Id(i),Id(length)),[VarDecl(Id(j),IntLiteral(0))],[Assign(Id(i),BinaryOp(+,Id(i),IntLiteral(1))),While(BinaryOp(<,Id(j),Id(width)),[VarDecl(Id(k),IntLiteral(0))],[Assign(Id(j),BinaryOp(+,Id(j),IntLiteral(1))),While(BinaryOp(<,Id(k),Id(height)),[],[Assign(Id(k),BinaryOp(+,Id(k),IntLiteral(1))),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[BinaryOp(-,Id(i),IntLiteral(1)),BinaryOp(-,Id(j),IntLiteral(1)),BinaryOp(-,Id(k),IntLiteral(1))])])])])])]),Return()]))])<EOF> || num:  587  |  True
--Jasmin Code  587  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	iconst_0
	istore 4
Label2:
	iload 4
	iload_0
	if_icmpge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	ifeq Label3
.var 5 is j I from Label4 to Label5
Label4:
	iconst_0
	istore 5
	iload 4
	iconst_1
	iadd
	istore 4
Label8:
	iload 5
	iload_1
	if_icmpge Label12
	iconst_1
	goto Label13
Label12:
	iconst_0
Label13:
	ifeq Label9
.var 6 is k I from Label10 to Label11
Label10:
	iconst_0
	istore 6
	iload 5
	iconst_1
	iadd
	istore 5
Label14:
	iload 6
	iload_2
	if_icmpge Label18
	iconst_1
	goto Label19
Label18:
	iconst_0
Label19:
	ifeq Label15
Label16:
	iload 6
	iconst_1
	iadd
	istore 6
	aload_3
	iload 4
	iconst_1
	isub
	aaload
	iload 5
	iconst_1
	isub
	aaload
	iload 6
	iconst_1
	isub
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label17:
	goto Label14
Label15:
Label11:
	goto Label8
Label9:
Label5:
	goto Label2
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 20051868079101112915287496081161024
Expect: 20051868079101112915287496081161024
================================END 587 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 588 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(0))][While(BinaryOp(<,Id(i),Id(length)),[VarDecl(Id(j),IntLiteral(0))],[Assign(Id(i),BinaryOp(+,Id(i),IntLiteral(1))),While(BinaryOp(<,Id(j),Id(width)),[VarDecl(Id(k),IntLiteral(0))],[Assign(Id(j),BinaryOp(+,Id(j),IntLiteral(1))),If(BinaryOp(==,Id(j),IntLiteral(1)),[],[Continue()])Else([],[]),While(BinaryOp(<,Id(k),Id(height)),[],[Assign(Id(k),BinaryOp(+,Id(k),IntLiteral(1))),If(BinaryOp(==,Id(k),IntLiteral(2)),[],[Break()])Else([],[]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[BinaryOp(-,Id(i),IntLiteral(1)),BinaryOp(-,Id(j),IntLiteral(1)),BinaryOp(-,Id(k),IntLiteral(1))])])])])])]),Return()]))])<EOF> || num:  588  |  True
--Jasmin Code  588  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	iconst_0
	istore 4
Label2:
	iload 4
	iload_0
	if_icmpge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	ifeq Label3
.var 5 is j I from Label4 to Label5
Label4:
	iconst_0
	istore 5
	iload 4
	iconst_1
	iadd
	istore 4
Label8:
	iload 5
	iload_1
	if_icmpge Label12
	iconst_1
	goto Label13
Label12:
	iconst_0
Label13:
	ifeq Label9
.var 6 is k I from Label10 to Label11
Label10:
	iconst_0
	istore 6
	iload 5
	iconst_1
	iadd
	istore 5
	iload 5
	iconst_1
	if_icmpne Label15
	iconst_1
	goto Label16
Label15:
	iconst_0
Label16:
	ifeq Label18
Label17:
	goto Label8
	goto Label14
Label18:
Label14:
Label19:
	iload 6
	iload_2
	if_icmpge Label23
	iconst_1
	goto Label24
Label23:
	iconst_0
Label24:
	ifeq Label20
Label21:
	iload 6
	iconst_1
	iadd
	istore 6
	iload 6
	iconst_2
	if_icmpne Label26
	iconst_1
	goto Label27
Label26:
	iconst_0
Label27:
	ifeq Label29
Label28:
	goto Label20
	goto Label25
Label29:
Label25:
	aload_3
	iload 4
	iconst_1
	isub
	aaload
	iload 5
	iconst_1
	isub
	aaload
	iload 6
	iconst_1
	isub
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label22:
	goto Label19
Label20:
Label11:
	goto Label8
Label9:
Label5:
	goto Label2
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 610781
Expect: 610781
================================END 588 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(i, Int, Variable, class=MCClass)
	 OldSymbol(j, Int, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
	 OldSymbol(iIncrease, MType([Int], Void), Function, class=MCClass)
	 OldSymbol(jIncrease, MType([Int], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(i, Int, class=MCClass)
	 Symbol(j, Int, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
	 Symbol(iIncrease, MType([Int], Void), class=MCClass)
	 Symbol(jIncrease, MType([Int], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 589 ================================
Input: Program([VarDecl(Id(i),IntLiteral(0)),VarDecl(Id(j),IntLiteral(0)),FuncDecl(Id(main)[],([][While(BinaryOp(<,Id(i),IntLiteral(10)),[VarDecl(Id(i),IntLiteral(6))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(i)])]),While(BinaryOp(<,Id(j),IntLiteral(2)),[VarDecl(Id(j),IntLiteral(8))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(j)])]),CallStmt(Id(jIncrease),[IntLiteral(1)])]),CallStmt(Id(iIncrease),[IntLiteral(2)]),Assign(Id(j),IntLiteral(0))]),Return()])),FuncDecl(Id(iIncrease)[VarDecl(Id(n))],([][Assign(Id(i),BinaryOp(+,Id(i),Id(n))),Return()])),FuncDecl(Id(jIncrease)[VarDecl(Id(n))],([][Assign(Id(j),BinaryOp(+,Id(j),Id(n))),Return()]))])<EOF> || num:  589  |  True
--Jasmin Code  589  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static i I
.field static j I

.method public static Main()V
Label0:
Label2:
	getstatic MCClass.i I
	bipush 10
	if_icmpge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	ifeq Label3
.var 0 is i I from Label4 to Label5
Label4:
	bipush 6
	istore_0
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label8:
	getstatic MCClass.j I
	iconst_2
	if_icmpge Label12
	iconst_1
	goto Label13
Label12:
	iconst_0
Label13:
	ifeq Label9
.var 1 is j I from Label10 to Label11
Label10:
	bipush 8
	istore_1
	iload_1
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_1
	invokestatic MCClass/jIncrease(I)V
Label11:
	goto Label8
Label9:
	iconst_2
	invokestatic MCClass/iIncrease(I)V
	iconst_0
	putstatic MCClass.j I
Label5:
	goto Label2
Label3:
	return
Label1:
	return
.limit stack 2
.limit locals 2
.end method

.method public static iIncrease(I)V
.var 0 is n I from Label0 to Label1
Label0:
	getstatic MCClass.i I
	iload_0
	iadd
	putstatic MCClass.i I
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static jIncrease(I)V
.var 0 is n I from Label0 to Label1
Label0:
	getstatic MCClass.j I
	iload_0
	iadd
	putstatic MCClass.j I
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_0
	putstatic MCClass.i I
	iconst_0
	putstatic MCClass.j I
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: 688688688688688
Expect: 688688688688688
================================END 589 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 590 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(i),IntLiteral(0))][Dowhile([],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(i)])]),Assign(Id(i),BinaryOp(+,Id(i),IntLiteral(2)))],BinaryOp(<,Id(i),IntLiteral(10))),Return()]))])<EOF> || num:  590  |  True
--Jasmin Code  590  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is i I from Label0 to Label1
Label0:
	iconst_0
	istore_0
Label4:
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	iconst_2
	iadd
	istore_0
Label5:
Label2:
	iload_0
	bipush 10
	if_icmpge Label6
	iconst_1
	goto Label7
Label6:
	iconst_0
Label7:
	ifne Label4
Label3:
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 02468
Expect: 02468
================================END 590 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 591 ================================
Input: Program([FuncDecl(Id(main)[],([][Dowhile([],[CallStmt(Id(print),[StringLiteral(HERE)])],BooleanLiteral(false)),Return()]))])<EOF> || num:  591  |  True
--Jasmin Code  591  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
Label0:
Label4:
	ldc "HERE"
	invokestatic io/print(Ljava/lang/String;)V
Label5:
Label2:
	iconst_0
	ifne Label4
Label3:
	return
Label1:
	return
.limit stack 1
.limit locals 0
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: HERE
Expect: HERE
================================END 591 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 592 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(0))][Dowhile([VarDecl(Id(j),IntLiteral(0))],[Assign(Id(i),BinaryOp(+,Id(i),IntLiteral(1))),Dowhile([VarDecl(Id(k),IntLiteral(0))],[Assign(Id(j),BinaryOp(+,Id(j),IntLiteral(1))),Dowhile([],[Assign(Id(k),BinaryOp(+,Id(k),IntLiteral(1))),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[BinaryOp(-,Id(i),IntLiteral(1)),BinaryOp(-,Id(j),IntLiteral(1)),BinaryOp(-,Id(k),IntLiteral(1))])])])],BinaryOp(<,Id(k),Id(height)))],BinaryOp(<,Id(j),Id(width)))],BinaryOp(<,Id(i),Id(length))),Return()]))])<EOF> || num:  592  |  True
--Jasmin Code  592  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	iconst_0
	istore 4
.var 5 is j I from Label4 to Label5
Label4:
	iconst_0
	istore 5
	iload 4
	iconst_1
	iadd
	istore 4
.var 6 is k I from Label8 to Label9
Label8:
	iconst_0
	istore 6
	iload 5
	iconst_1
	iadd
	istore 5
Label12:
	iload 6
	iconst_1
	iadd
	istore 6
	aload_3
	iload 4
	iconst_1
	isub
	aaload
	iload 5
	iconst_1
	isub
	aaload
	iload 6
	iconst_1
	isub
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label13:
Label10:
	iload 6
	iload_2
	if_icmpge Label14
	iconst_1
	goto Label15
Label14:
	iconst_0
Label15:
	ifne Label12
Label11:
Label9:
Label6:
	iload 5
	iload_1
	if_icmpge Label16
	iconst_1
	goto Label17
Label16:
	iconst_0
Label17:
	ifne Label8
Label7:
Label5:
Label2:
	iload 4
	iload_0
	if_icmpge Label18
	iconst_1
	goto Label19
Label18:
	iconst_0
Label19:
	ifne Label4
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 20051868079101112915287496081161024
Expect: 20051868079101112915287496081161024
================================END 592 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 593 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(length),IntLiteral(2)),VarDecl(Id(width),IntLiteral(3)),VarDecl(Id(height),IntLiteral(3)),VarDecl(Id(x),ArrayLiteral(ArrayLiteral(ArrayLiteral(IntLiteral(200),IntLiteral(5),IntLiteral(18)),ArrayLiteral(IntLiteral(6),IntLiteral(80),IntLiteral(79)),ArrayLiteral(IntLiteral(10),IntLiteral(11),IntLiteral(12))),ArrayLiteral(ArrayLiteral(IntLiteral(9),IntLiteral(15),IntLiteral(28)),ArrayLiteral(IntLiteral(7),IntLiteral(49),IntLiteral(60)),ArrayLiteral(IntLiteral(81),IntLiteral(16),IntLiteral(1024))))),VarDecl(Id(i),IntLiteral(0))][Dowhile([VarDecl(Id(j),IntLiteral(0))],[Assign(Id(i),BinaryOp(+,Id(i),IntLiteral(1))),Dowhile([VarDecl(Id(k),IntLiteral(0))],[If(BinaryOp(==,Id(j),IntLiteral(1)),[],[Assign(Id(j),BinaryOp(+,Id(j),IntLiteral(1))),Continue()])Else([],[]),Assign(Id(j),BinaryOp(+,Id(j),IntLiteral(1))),Dowhile([],[If(BinaryOp(==,Id(k),IntLiteral(1)),[],[Break()])Else([],[]),Assign(Id(k),BinaryOp(+,Id(k),IntLiteral(1))),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(x),[BinaryOp(-,Id(i),IntLiteral(1)),BinaryOp(-,Id(j),IntLiteral(1)),BinaryOp(-,Id(k),IntLiteral(1))])])])],BinaryOp(<,Id(k),Id(height)))],BinaryOp(<,Id(j),Id(width)))],BinaryOp(<,Id(i),Id(length))),Return()]))])<EOF> || num:  593  |  True
--Jasmin Code  593  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()V
.var 0 is length I from Label0 to Label1
.var 1 is width I from Label0 to Label1
.var 2 is height I from Label0 to Label1
.var 3 is x [[[I from Label0 to Label1
.var 4 is i I from Label0 to Label1
Label0:
	iconst_2
	istore_0
	iconst_3
	istore_1
	iconst_3
	istore_2
	iconst_2
	anewarray [[I
	dup
	iconst_0
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	sipush 200
	iastore
	dup
	iconst_1
	iconst_5
	iastore
	dup
	iconst_2
	bipush 18
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 6
	iastore
	dup
	iconst_1
	bipush 80
	iastore
	dup
	iconst_2
	bipush 79
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 10
	iastore
	dup
	iconst_1
	bipush 11
	iastore
	dup
	iconst_2
	bipush 12
	iastore
	aastore
	aastore
	dup
	iconst_1
	iconst_3
	anewarray [I
	dup
	iconst_0
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 9
	iastore
	dup
	iconst_1
	bipush 15
	iastore
	dup
	iconst_2
	bipush 28
	iastore
	aastore
	dup
	iconst_1
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 7
	iastore
	dup
	iconst_1
	bipush 49
	iastore
	dup
	iconst_2
	bipush 60
	iastore
	aastore
	dup
	iconst_2
	iconst_3
	newarray int
	dup
	iconst_0
	bipush 81
	iastore
	dup
	iconst_1
	bipush 16
	iastore
	dup
	iconst_2
	sipush 1024
	iastore
	aastore
	aastore
	astore_3
	iconst_0
	istore 4
.var 5 is j I from Label4 to Label5
Label4:
	iconst_0
	istore 5
	iload 4
	iconst_1
	iadd
	istore 4
.var 6 is k I from Label8 to Label9
Label8:
	iconst_0
	istore 6
	iload 5
	iconst_1
	if_icmpne Label11
	iconst_1
	goto Label12
Label11:
	iconst_0
Label12:
	ifeq Label14
Label13:
	iload 5
	iconst_1
	iadd
	istore 5
	goto Label6
	goto Label10
Label14:
Label10:
	iload 5
	iconst_1
	iadd
	istore 5
Label17:
	iload 6
	iconst_1
	if_icmpne Label20
	iconst_1
	goto Label21
Label20:
	iconst_0
Label21:
	ifeq Label23
Label22:
	goto Label16
	goto Label19
Label23:
Label19:
	iload 6
	iconst_1
	iadd
	istore 6
	aload_3
	iload 4
	iconst_1
	isub
	aaload
	iload 5
	iconst_1
	isub
	aaload
	iload 6
	iconst_1
	isub
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
Label18:
Label15:
	iload 6
	iload_2
	if_icmpge Label24
	iconst_1
	goto Label25
Label24:
	iconst_0
Label25:
	ifne Label17
Label16:
Label9:
Label6:
	iload 5
	iload_1
	if_icmpge Label26
	iconst_1
	goto Label27
Label26:
	iconst_0
Label27:
	ifne Label8
Label7:
Label5:
Label2:
	iload 4
	iload_0
	if_icmpge Label28
	iconst_1
	goto Label29
Label28:
	iconst_0
Label29:
	ifne Label4
Label3:
	return
Label1:
	return
.limit stack 10
.limit locals 7
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 20010981
Expect: 20010981
================================END 593 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(i, Int, Variable, class=MCClass)
	 OldSymbol(j, Int, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
	 OldSymbol(iIncrease, MType([Int], Void), Function, class=MCClass)
	 OldSymbol(jIncrease, MType([Int], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(i, Int, class=MCClass)
	 Symbol(j, Int, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
	 Symbol(iIncrease, MType([Int], Void), class=MCClass)
	 Symbol(jIncrease, MType([Int], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 594 ================================
Input: Program([VarDecl(Id(i),IntLiteral(0)),VarDecl(Id(j),IntLiteral(0)),FuncDecl(Id(main)[],([][Dowhile([VarDecl(Id(i),IntLiteral(6))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(i)])]),Dowhile([VarDecl(Id(j),IntLiteral(8))],[CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(j)])]),CallStmt(Id(jIncrease),[IntLiteral(1)])],BinaryOp(<,Id(j),IntLiteral(2))),CallStmt(Id(iIncrease),[IntLiteral(2)]),Assign(Id(j),IntLiteral(0))],BinaryOp(<,Id(i),IntLiteral(10))),Return()])),FuncDecl(Id(iIncrease)[VarDecl(Id(n))],([][Assign(Id(i),BinaryOp(+,Id(i),Id(n))),Return()])),FuncDecl(Id(jIncrease)[VarDecl(Id(n))],([][Assign(Id(j),BinaryOp(+,Id(j),Id(n))),Return()]))])<EOF> || num:  594  |  True
--Jasmin Code  594  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static i I
.field static j I

.method public static Main()V
Label0:
.var 0 is i I from Label4 to Label5
Label4:
	bipush 6
	istore_0
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
.var 1 is j I from Label8 to Label9
Label8:
	bipush 8
	istore_1
	iload_1
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_1
	invokestatic MCClass/jIncrease(I)V
Label9:
Label6:
	getstatic MCClass.j I
	iconst_2
	if_icmpge Label10
	iconst_1
	goto Label11
Label10:
	iconst_0
Label11:
	ifne Label8
Label7:
	iconst_2
	invokestatic MCClass/iIncrease(I)V
	iconst_0
	putstatic MCClass.j I
Label5:
Label2:
	getstatic MCClass.i I
	bipush 10
	if_icmpge Label12
	iconst_1
	goto Label13
Label12:
	iconst_0
Label13:
	ifne Label4
Label3:
	return
Label1:
	return
.limit stack 2
.limit locals 2
.end method

.method public static iIncrease(I)V
.var 0 is n I from Label0 to Label1
Label0:
	getstatic MCClass.i I
	iload_0
	iadd
	putstatic MCClass.i I
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static jIncrease(I)V
.var 0 is n I from Label0 to Label1
Label0:
	getstatic MCClass.j I
	iload_0
	iadd
	putstatic MCClass.j I
	return
Label1:
	return
.limit stack 2
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_0
	putstatic MCClass.i I
	iconst_0
	putstatic MCClass.j I
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: 688688688688688
Expect: 688688688688688
================================END 594 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Int), Function, class=MCClass)
	 OldSymbol(fac, MType([Int], Int), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Int), class=MCClass)
	 Symbol(fac, MType([Int], Int), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 595 ================================
Input: Program([FuncDecl(Id(main)[],([][CallStmt(Id(print),[CallExpr(Id(string_of_int),[CallExpr(Id(fac),[IntLiteral(6)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[CallExpr(Id(fac),[IntLiteral(0)])])]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[CallExpr(Id(fac),[IntLiteral(1)])])]),Return(IntLiteral(0))])),FuncDecl(Id(fac)[VarDecl(Id(x))],([][If(BinaryOp(<=,Id(x),IntLiteral(1)),[],[Return(IntLiteral(1))])Else([],[]),Return(BinaryOp(*,Id(x),CallExpr(Id(fac),[BinaryOp(-,Id(x),IntLiteral(1))])))]))])<EOF> || num:  595  |  True
--Jasmin Code  595  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()I
Label0:
	bipush 6
	invokestatic MCClass/fac(I)I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_0
	invokestatic MCClass/fac(I)I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_1
	invokestatic MCClass/fac(I)I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_0
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 1
.limit locals 0
.end method

.method public static fac(I)I
.var 0 is x I from Label0 to Label1
Label0:
	iload_0
	iconst_1
	if_icmpgt Label3
	iconst_1
	goto Label4
Label3:
	iconst_0
Label4:
	ifeq Label6
Label5:
	iconst_1
	ireturn
	goto Label2
Label6:
Label2:
	iload_0
	iload_0
	iconst_1
	isub
	invokestatic MCClass/fac(I)I
	imul
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 3
.limit locals 1
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()I
	pop
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: 72011
Expect: 72011
================================END 595 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Int), Function, class=MCClass)
	 OldSymbol(swapInt, MType([Int, Int], Void), Function, class=MCClass)
	 OldSymbol(swapBool, MType([Bool, Bool], Void), Function, class=MCClass)
	 OldSymbol(swapFloat, MType([Float, Float], Void), Function, class=MCClass)
	 OldSymbol(swapString, MType([String, String], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Int), class=MCClass)
	 Symbol(swapInt, MType([Int, Int], Void), class=MCClass)
	 Symbol(swapBool, MType([Bool, Bool], Void), class=MCClass)
	 Symbol(swapFloat, MType([Float, Float], Void), class=MCClass)
	 Symbol(swapString, MType([String, String], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 596 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(iA),IntLiteral(5)),VarDecl(Id(iB),IntLiteral(7)),VarDecl(Id(fA),FloatLiteral(1.3)),VarDecl(Id(fB),FloatLiteral(2.8)),VarDecl(Id(bA),BooleanLiteral(true)),VarDecl(Id(bB),BooleanLiteral(false)),VarDecl(Id(sA),StringLiteral(A)),VarDecl(Id(sB),StringLiteral(B))][CallStmt(Id(print),[StringLiteral(iA = )]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(iA)])]),CallStmt(Id(print),[StringLiteral(, iB = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(iB)])]),CallStmt(Id(print),[StringLiteral(bA = )]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[Id(bA)])]),CallStmt(Id(print),[StringLiteral(, bB = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_bool),[Id(bB)])]),CallStmt(Id(print),[StringLiteral(fA = )]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(fA)])]),CallStmt(Id(print),[StringLiteral(, fB = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_float),[Id(fB)])]),CallStmt(Id(print),[StringLiteral(sA = )]),CallStmt(Id(print),[Id(sA)]),CallStmt(Id(print),[StringLiteral(, sB = )]),CallStmt(Id(printStrLn),[Id(sB)]),CallStmt(Id(swapInt),[Id(iA),Id(iB)]),CallStmt(Id(swapBool),[Id(bA),Id(bB)]),CallStmt(Id(swapFloat),[Id(fA),Id(fB)]),CallStmt(Id(swapString),[Id(sA),Id(sB)]),CallStmt(Id(print),[StringLiteral(iA = )]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[Id(iA)])]),CallStmt(Id(print),[StringLiteral(, iB = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(iB)])]),CallStmt(Id(print),[StringLiteral(bA = )]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[Id(bA)])]),CallStmt(Id(print),[StringLiteral(, bB = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_bool),[Id(bB)])]),CallStmt(Id(print),[StringLiteral(fA = )]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[Id(fA)])]),CallStmt(Id(print),[StringLiteral(, fB = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_float),[Id(fB)])]),CallStmt(Id(print),[StringLiteral(sA = )]),CallStmt(Id(print),[Id(sA)]),CallStmt(Id(print),[StringLiteral(, sB = )]),CallStmt(Id(printStrLn),[Id(sB)]),Return(IntLiteral(0))])),FuncDecl(Id(swapInt)[VarDecl(Id(x)),VarDecl(Id(y))],([VarDecl(Id(temp),IntLiteral(0))][Assign(Id(temp),Id(x)),Assign(Id(x),Id(y)),Assign(Id(y),Id(temp)),Return()])),FuncDecl(Id(swapBool)[VarDecl(Id(x)),VarDecl(Id(y))],([VarDecl(Id(temp),BooleanLiteral(false))][Assign(Id(temp),Id(x)),Assign(Id(x),Id(y)),Assign(Id(y),Id(temp)),Return()])),FuncDecl(Id(swapFloat)[VarDecl(Id(x)),VarDecl(Id(y))],([VarDecl(Id(temp),FloatLiteral(0.0))][Assign(Id(temp),Id(x)),Assign(Id(x),Id(y)),Assign(Id(y),Id(temp)),Return()])),FuncDecl(Id(swapString)[VarDecl(Id(x)),VarDecl(Id(y))],([VarDecl(Id(temp),StringLiteral())][Assign(Id(temp),Id(x)),Assign(Id(x),Id(y)),Assign(Id(y),Id(temp)),Return()]))])<EOF> || num:  596  |  True
--Jasmin Code  596  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()I
.var 0 is iA I from Label0 to Label1
.var 1 is iB I from Label0 to Label1
.var 2 is fA F from Label0 to Label1
.var 3 is fB F from Label0 to Label1
.var 4 is bA Z from Label0 to Label1
.var 5 is bB Z from Label0 to Label1
.var 6 is sA Ljava/lang/String; from Label0 to Label1
.var 7 is sB Ljava/lang/String; from Label0 to Label1
Label0:
	iconst_5
	istore_0
	bipush 7
	istore_1
	ldc 1.3
	fstore_2
	ldc 2.8
	fstore_3
	iconst_1
	istore 4
	iconst_0
	istore 5
	ldc "A"
	astore 6
	ldc "B"
	astore 7
	ldc "iA = "
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", iB = "
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "bA = "
	invokestatic io/print(Ljava/lang/String;)V
	iload 4
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", bB = "
	invokestatic io/print(Ljava/lang/String;)V
	iload 5
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "fA = "
	invokestatic io/print(Ljava/lang/String;)V
	fload_2
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", fB = "
	invokestatic io/print(Ljava/lang/String;)V
	fload_3
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "sA = "
	invokestatic io/print(Ljava/lang/String;)V
	aload 6
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", sB = "
	invokestatic io/print(Ljava/lang/String;)V
	aload 7
	invokestatic io/printStrLn(Ljava/lang/String;)V
	iload_0
	iload_1
	invokestatic MCClass/swapInt(II)V
	iload 4
	iload 5
	invokestatic MCClass/swapBool(ZZ)V
	fload_2
	fload_3
	invokestatic MCClass/swapFloat(FF)V
	aload 6
	aload 7
	invokestatic MCClass/swapString(Ljava/lang/String;Ljava/lang/String;)V
	ldc "iA = "
	invokestatic io/print(Ljava/lang/String;)V
	iload_0
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", iB = "
	invokestatic io/print(Ljava/lang/String;)V
	iload_1
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "bA = "
	invokestatic io/print(Ljava/lang/String;)V
	iload 4
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", bB = "
	invokestatic io/print(Ljava/lang/String;)V
	iload 5
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "fA = "
	invokestatic io/print(Ljava/lang/String;)V
	fload_2
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", fB = "
	invokestatic io/print(Ljava/lang/String;)V
	fload_3
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "sA = "
	invokestatic io/print(Ljava/lang/String;)V
	aload 6
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", sB = "
	invokestatic io/print(Ljava/lang/String;)V
	aload 7
	invokestatic io/printStrLn(Ljava/lang/String;)V
	iconst_0
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 2
.limit locals 8
.end method

.method public static swapInt(II)V
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
.var 2 is temp I from Label0 to Label1
Label0:
	iconst_0
	istore_2
	iload_0
	istore_2
	iload_1
	istore_0
	iload_2
	istore_1
	return
Label1:
	return
.limit stack 1
.limit locals 3
.end method

.method public static swapBool(ZZ)V
.var 0 is x Z from Label0 to Label1
.var 1 is y Z from Label0 to Label1
.var 2 is temp Z from Label0 to Label1
Label0:
	iconst_0
	istore_2
	iload_0
	istore_2
	iload_1
	istore_0
	iload_2
	istore_1
	return
Label1:
	return
.limit stack 1
.limit locals 3
.end method

.method public static swapFloat(FF)V
.var 0 is x F from Label0 to Label1
.var 1 is y F from Label0 to Label1
.var 2 is temp F from Label0 to Label1
Label0:
	ldc 0.0
	fstore_2
	fload_0
	fstore_2
	fload_1
	fstore_0
	fload_2
	fstore_1
	return
Label1:
	return
.limit stack 1
.limit locals 3
.end method

.method public static swapString(Ljava/lang/String;Ljava/lang/String;)V
.var 0 is x Ljava/lang/String; from Label0 to Label1
.var 1 is y Ljava/lang/String; from Label0 to Label1
.var 2 is temp Ljava/lang/String; from Label0 to Label1
Label0:
	ldc ""
	astore_2
	aload_0
	astore_2
	aload_1
	astore_0
	aload_2
	astore_1
	return
Label1:
	return
.limit stack 1
.limit locals 3
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()I
	pop
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: iA = 5, iB = 7
bA = true, bB = false
fA = 1.3, fB = 2.8
sA = A, sB = B
iA = 5, iB = 7
bA = true, bB = false
fA = 1.3, fB = 2.8
sA = A, sB = B

Expect: iA = 5, iB = 7
bA = true, bB = false
fA = 1.3, fB = 2.8
sA = A, sB = B
iA = 5, iB = 7
bA = true, bB = false
fA = 1.3, fB = 2.8
sA = A, sB = B

================================END 596 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(main, MType([], Int), Function, class=MCClass)
	 OldSymbol(swapInt, MType([Array(Int, [2]), Int, Int], Void), Function, class=MCClass)
	 OldSymbol(swapBool, MType([Array(Bool, [2]), Int, Int], Void), Function, class=MCClass)
	 OldSymbol(swapFloat, MType([Array(Float, [2]), Int, Int], Void), Function, class=MCClass)
	 OldSymbol(swapString, MType([Array(String, [2]), Int, Int], Void), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(main, MType([], Int), class=MCClass)
	 Symbol(swapInt, MType([Array(Int, [2]), Int, Int], Void), class=MCClass)
	 Symbol(swapBool, MType([Array(Bool, [2]), Int, Int], Void), class=MCClass)
	 Symbol(swapFloat, MType([Array(Float, [2]), Int, Int], Void), class=MCClass)
	 Symbol(swapString, MType([Array(String, [2]), Int, Int], Void), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 597 ================================
Input: Program([FuncDecl(Id(main)[],([VarDecl(Id(iA),ArrayLiteral(IntLiteral(5),IntLiteral(7))),VarDecl(Id(fA),ArrayLiteral(FloatLiteral(1.3),FloatLiteral(2.8))),VarDecl(Id(bA),ArrayLiteral(BooleanLiteral(true),BooleanLiteral(false))),VarDecl(Id(sA),ArrayLiteral(StringLiteral(A),StringLiteral(B)))][CallStmt(Id(print),[StringLiteral(iA[0] = )]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(iA),[IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(, iA[1] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[ArrayCell(Id(iA),[IntLiteral(1)])])]),CallStmt(Id(print),[StringLiteral(bA[0] = )]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(bA),[IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(, bA[1] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_bool),[ArrayCell(Id(bA),[IntLiteral(1)])])]),CallStmt(Id(print),[StringLiteral(fA[0] = )]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(fA),[IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(, fA[1] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_float),[ArrayCell(Id(fA),[IntLiteral(1)])])]),CallStmt(Id(print),[StringLiteral(sA[0] = )]),CallStmt(Id(print),[ArrayCell(Id(sA),[IntLiteral(0)])]),CallStmt(Id(print),[StringLiteral(, sA[1] = )]),CallStmt(Id(printStrLn),[ArrayCell(Id(sA),[IntLiteral(1)])]),CallStmt(Id(swapInt),[Id(iA),IntLiteral(0),IntLiteral(1)]),CallStmt(Id(swapBool),[Id(bA),IntLiteral(0),IntLiteral(1)]),CallStmt(Id(swapFloat),[Id(fA),IntLiteral(0),IntLiteral(1)]),CallStmt(Id(swapString),[Id(sA),IntLiteral(0),IntLiteral(1)]),CallStmt(Id(print),[StringLiteral(iA[0] = )]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(Id(iA),[IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(, iA[1] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[ArrayCell(Id(iA),[IntLiteral(1)])])]),CallStmt(Id(print),[StringLiteral(bA[0] = )]),CallStmt(Id(print),[CallExpr(Id(string_of_bool),[ArrayCell(Id(bA),[IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(, bA[1] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_bool),[ArrayCell(Id(bA),[IntLiteral(1)])])]),CallStmt(Id(print),[StringLiteral(fA[0] = )]),CallStmt(Id(print),[CallExpr(Id(string_of_float),[ArrayCell(Id(fA),[IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(, fA[1] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_float),[ArrayCell(Id(fA),[IntLiteral(1)])])]),CallStmt(Id(print),[StringLiteral(sA[0] = )]),CallStmt(Id(print),[ArrayCell(Id(sA),[IntLiteral(0)])]),CallStmt(Id(print),[StringLiteral(, sA[1] = )]),CallStmt(Id(printStrLn),[ArrayCell(Id(sA),[IntLiteral(1)])]),Return(IntLiteral(0))])),FuncDecl(Id(swapInt)[VarDecl(Id(x),[2]),VarDecl(Id(a)),VarDecl(Id(b))],([VarDecl(Id(temp),IntLiteral(0))][Assign(Id(temp),ArrayCell(Id(x),[Id(a)])),Assign(ArrayCell(Id(x),[Id(a)]),ArrayCell(Id(x),[Id(b)])),Assign(ArrayCell(Id(x),[Id(b)]),Id(temp)),Return()])),FuncDecl(Id(swapBool)[VarDecl(Id(x),[2]),VarDecl(Id(a)),VarDecl(Id(b))],([VarDecl(Id(temp),BooleanLiteral(false))][Assign(Id(temp),ArrayCell(Id(x),[Id(a)])),Assign(ArrayCell(Id(x),[Id(a)]),ArrayCell(Id(x),[Id(b)])),Assign(ArrayCell(Id(x),[Id(b)]),Id(temp)),Return()])),FuncDecl(Id(swapFloat)[VarDecl(Id(x),[2]),VarDecl(Id(a)),VarDecl(Id(b))],([VarDecl(Id(temp),FloatLiteral(0.0))][Assign(Id(temp),ArrayCell(Id(x),[Id(a)])),Assign(ArrayCell(Id(x),[Id(a)]),ArrayCell(Id(x),[Id(b)])),Assign(ArrayCell(Id(x),[Id(b)]),Id(temp)),Return()])),FuncDecl(Id(swapString)[VarDecl(Id(x),[2]),VarDecl(Id(a)),VarDecl(Id(b))],([VarDecl(Id(temp),StringLiteral())][Assign(Id(temp),ArrayCell(Id(x),[Id(a)])),Assign(ArrayCell(Id(x),[Id(a)]),ArrayCell(Id(x),[Id(b)])),Assign(ArrayCell(Id(x),[Id(b)]),Id(temp)),Return()]))])<EOF> || num:  597  |  True
--Jasmin Code  597  --
.source MCClass.java
.class public MCClass
.super java.lang.Object

.method public static Main()I
.var 0 is iA [I from Label0 to Label1
.var 1 is fA [F from Label0 to Label1
.var 2 is bA [Z from Label0 to Label1
.var 3 is sA [Ljava/lang/String; from Label0 to Label1
Label0:
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_5
	iastore
	dup
	iconst_1
	bipush 7
	iastore
	astore_0
	iconst_2
	newarray float
	dup
	iconst_0
	ldc 1.3
	fastore
	dup
	iconst_1
	ldc 2.8
	fastore
	astore_1
	iconst_2
	newarray boolean
	dup
	iconst_0
	iconst_1
	bastore
	dup
	iconst_1
	iconst_0
	bastore
	astore_2
	iconst_2
	anewarray java/lang/String
	dup
	iconst_0
	ldc "A"
	aastore
	dup
	iconst_1
	ldc "B"
	aastore
	astore_3
	ldc "iA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", iA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "bA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_2
	iconst_0
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", bA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_2
	iconst_1
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "fA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_0
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", fA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_1
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "sA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_3
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", sA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_3
	iconst_1
	aaload
	invokestatic io/printStrLn(Ljava/lang/String;)V
	aload_0
	iconst_0
	iconst_1
	invokestatic MCClass/swapInt([III)V
	aload_2
	iconst_0
	iconst_1
	invokestatic MCClass/swapBool([ZII)V
	aload_1
	iconst_0
	iconst_1
	invokestatic MCClass/swapFloat([FII)V
	aload_3
	iconst_0
	iconst_1
	invokestatic MCClass/swapString([Ljava/lang/String;II)V
	ldc "iA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", iA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "bA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_2
	iconst_0
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", bA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_2
	iconst_1
	baload
	invokestatic io/string_of_bool(Z)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "fA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_0
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", fA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_1
	iconst_1
	faload
	invokestatic io/string_of_float(F)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "sA[0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_3
	iconst_0
	aaload
	invokestatic io/print(Ljava/lang/String;)V
	ldc ", sA[1] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_3
	iconst_1
	aaload
	invokestatic io/printStrLn(Ljava/lang/String;)V
	iconst_0
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 4
.limit locals 4
.end method

.method public static swapInt([III)V
.var 0 is x [I from Label0 to Label1
.var 1 is a I from Label0 to Label1
.var 2 is b I from Label0 to Label1
.var 3 is temp I from Label0 to Label1
Label0:
	iconst_0
	istore_3
	aload_0
	iload_1
	iaload
	istore_3
	aload_0
	iload_1
	aload_0
	iload_2
	iaload
	iastore
	aload_0
	iload_2
	iload_3
	iastore
	return
Label1:
	return
.limit stack 4
.limit locals 4
.end method

.method public static swapBool([ZII)V
.var 0 is x [Z from Label0 to Label1
.var 1 is a I from Label0 to Label1
.var 2 is b I from Label0 to Label1
.var 3 is temp Z from Label0 to Label1
Label0:
	iconst_0
	istore_3
	aload_0
	iload_1
	baload
	istore_3
	aload_0
	iload_1
	aload_0
	iload_2
	baload
	bastore
	aload_0
	iload_2
	iload_3
	bastore
	return
Label1:
	return
.limit stack 4
.limit locals 4
.end method

.method public static swapFloat([FII)V
.var 0 is x [F from Label0 to Label1
.var 1 is a I from Label0 to Label1
.var 2 is b I from Label0 to Label1
.var 3 is temp F from Label0 to Label1
Label0:
	ldc 0.0
	fstore_3
	aload_0
	iload_1
	faload
	fstore_3
	aload_0
	iload_1
	aload_0
	iload_2
	faload
	fastore
	aload_0
	iload_2
	fload_3
	fastore
	return
Label1:
	return
.limit stack 4
.limit locals 4
.end method

.method public static swapString([Ljava/lang/String;II)V
.var 0 is x [Ljava/lang/String; from Label0 to Label1
.var 1 is a I from Label0 to Label1
.var 2 is b I from Label0 to Label1
.var 3 is temp Ljava/lang/String; from Label0 to Label1
Label0:
	ldc ""
	astore_3
	aload_0
	iload_1
	aaload
	astore_3
	aload_0
	iload_1
	aload_0
	iload_2
	aaload
	aastore
	aload_0
	iload_2
	aload_3
	aastore
	return
Label1:
	return
.limit stack 4
.limit locals 4
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()I
	pop
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
Label1:
	return
.limit stack 0
.limit locals 0
.end method

Result: iA[0] = 5, iA[1] = 7
bA[0] = true, bA[1] = false
fA[0] = 1.3, fA[1] = 2.8
sA[0] = A, sA[1] = B
iA[0] = 7, iA[1] = 5
bA[0] = false, bA[1] = true
fA[0] = 2.8, fA[1] = 1.3
sA[0] = B, sA[1] = A

Expect: iA[0] = 5, iA[1] = 7
bA[0] = true, bA[1] = false
fA[0] = 1.3, fA[1] = 2.8
sA[0] = A, sA[1] = B
iA[0] = 7, iA[1] = 5
bA[0] = false, bA[1] = true
fA[0] = 2.8, fA[1] = 1.3
sA[0] = B, sA[1] = A

================================END 597 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(a, Int, Variable, class=MCClass)
	 OldSymbol(b, Int, Variable, class=MCClass)
	 OldSymbol(main, MType([], Int), Function, class=MCClass)
	 OldSymbol(sum, MType([Int, Int], Int), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(a, Int, class=MCClass)
	 Symbol(b, Int, class=MCClass)
	 Symbol(main, MType([], Int), class=MCClass)
	 Symbol(sum, MType([Int, Int], Int), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 598 ================================
Input: Program([VarDecl(Id(a),IntLiteral(81)),VarDecl(Id(b),IntLiteral(67)),FuncDecl(Id(main)[],([][CallStmt(Id(print),[StringLiteral(a = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(a)])]),CallStmt(Id(print),[StringLiteral(b = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(b)])]),CallStmt(Id(print),[StringLiteral(a + b = )]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[CallExpr(Id(sum),[Id(a),Id(b)])])]),Return(IntLiteral(0))])),FuncDecl(Id(sum)[VarDecl(Id(x)),VarDecl(Id(y))],([][Return(BinaryOp(+,Id(x),Id(y)))]))])<EOF> || num:  598  |  True
--Jasmin Code  598  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static a I
.field static b I

.method public static Main()I
Label0:
	ldc "a = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.a I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "b = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.b I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "a + b = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.a I
	getstatic MCClass.b I
	invokestatic MCClass/sum(II)I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_0
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 2
.limit locals 0
.end method

.method public static sum(II)I
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
Label0:
	iload_0
	iload_1
	iadd
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 2
.limit locals 2
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()I
	pop
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	bipush 81
	putstatic MCClass.a I
	bipush 67
	putstatic MCClass.b I
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: a = 81
b = 67
a + b = 148
Expect: a = 81
b = 67
a + b = 148
================================END 598 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(a, Int, Variable, class=MCClass)
	 OldSymbol(b, Int, Variable, class=MCClass)
	 OldSymbol(main, MType([], Int), Function, class=MCClass)
	 OldSymbol(power, MType([Int, Int], Int), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(a, Int, class=MCClass)
	 Symbol(b, Int, class=MCClass)
	 Symbol(main, MType([], Int), class=MCClass)
	 Symbol(power, MType([Int, Int], Int), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 599 ================================
Input: Program([VarDecl(Id(a),IntLiteral(3)),VarDecl(Id(b),IntLiteral(4)),FuncDecl(Id(main)[],([][CallStmt(Id(print),[StringLiteral(a = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(a)])]),CallStmt(Id(print),[StringLiteral(b = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(b)])]),CallStmt(Id(print),[StringLiteral(a^b = )]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[CallExpr(Id(power),[Id(a),Id(b)])])]),Return(IntLiteral(0))])),FuncDecl(Id(power)[VarDecl(Id(x)),VarDecl(Id(y))],([VarDecl(Id(r),IntLiteral(1)),VarDecl(Id(i),IntLiteral(0))][For(Id(i),IntLiteral(0),BinaryOp(<,Id(i),Id(y)),IntLiteral(1),[],[Assign(Id(r),BinaryOp(*,Id(r),Id(x)))]),Return(Id(r))]))])<EOF> || num:  599  |  True
--Jasmin Code  599  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static a I
.field static b I

.method public static Main()I
Label0:
	ldc "a = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.a I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "b = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.b I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "a^b = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.a I
	getstatic MCClass.b I
	invokestatic MCClass/power(II)I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	iconst_0
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 2
.limit locals 0
.end method

.method public static power(II)I
.var 0 is x I from Label0 to Label1
.var 1 is y I from Label0 to Label1
.var 2 is r I from Label0 to Label1
.var 3 is i I from Label0 to Label1
Label0:
	iconst_1
	istore_2
	iconst_0
	istore_3
	iconst_0
	istore_3
Label6:
	iload_3
	iload_1
	if_icmpge Label7
	iconst_1
	goto Label8
Label7:
	iconst_0
Label8:
	ifeq Label3
Label4:
	iload_2
	iload_0
	imul
	istore_2
Label5:
Label2:
	iload_3
	iconst_1
	iadd
	istore_3
	goto Label6
Label3:
	iload_2
	ireturn
Label1:
	iconst_0
	ireturn
.limit stack 2
.limit locals 4
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()I
	pop
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_3
	putstatic MCClass.a I
	iconst_4
	putstatic MCClass.b I
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: a = 3
b = 4
a^b = 81
Expect: a = 3
b = 4
a^b = 81
================================END 599 ================================

Generated: MCClass.class
--------------------OldSymbol Table---------------------
Scope: 0
	 OldSymbol(int_of_float, MType([Float], Int), Function, class=io)
	 OldSymbol(float_to_int, MType([Int], Float), Function, class=io)
	 OldSymbol(int_of_string, MType([String], Int), Function, class=io)
	 OldSymbol(string_of_int, MType([Int], String), Function, class=io)
	 OldSymbol(float_of_string, MType([String], Float), Function, class=io)
	 OldSymbol(string_of_float, MType([Float], String), Function, class=io)
	 OldSymbol(bool_of_string, MType([String], Bool), Function, class=io)
	 OldSymbol(string_of_bool, MType([Bool], String), Function, class=io)
	 OldSymbol(read, MType([], String), Function, class=io)
	 OldSymbol(printLn, MType([], Void), Function, class=io)
	 OldSymbol(print, MType([String], Void), Function, class=io)
	 OldSymbol(printStrLn, MType([String], Void), Function, class=io)
	 OldSymbol(a, Int, Variable, class=MCClass)
	 OldSymbol(b, Int, Variable, class=MCClass)
	 OldSymbol(c, Int, Variable, class=MCClass)
	 OldSymbol(d, Int, Variable, class=MCClass)
	 OldSymbol(main, MType([], Void), Function, class=MCClass)
	 OldSymbol(matrix_2x2, MType([Int, Int, Int, Int], Array(Int, [2, 2])), Function, class=MCClass)
-------------------END OldSymbol Table-------------------
------------------------Symbol Table------------------------
	 Symbol(int_of_float, MType([Float], Int), class=io)
	 Symbol(float_to_int, MType([Int], Float), class=io)
	 Symbol(int_of_string, MType([String], Int), class=io)
	 Symbol(string_of_int, MType([Int], String), class=io)
	 Symbol(float_of_string, MType([String], Float), class=io)
	 Symbol(string_of_float, MType([Float], String), class=io)
	 Symbol(bool_of_string, MType([String], Bool), class=io)
	 Symbol(string_of_bool, MType([Bool], String), class=io)
	 Symbol(read, MType([], String), class=io)
	 Symbol(printLn, MType([], Void), class=io)
	 Symbol(print, MType([String], Void), class=io)
	 Symbol(printStrLn, MType([String], Void), class=io)
	 Symbol(a, Int, class=MCClass)
	 Symbol(b, Int, class=MCClass)
	 Symbol(c, Int, class=MCClass)
	 Symbol(d, Int, class=MCClass)
	 Symbol(main, MType([], Void), class=MCClass)
	 Symbol(matrix_2x2, MType([Int, Int, Int, Int], Array(Int, [2, 2])), class=MCClass)
----------------------END Symbol Table----------------------

==============================BEGIN 502 ================================
Input: Program([VarDecl(Id(a),IntLiteral(3)),VarDecl(Id(b),IntLiteral(4)),VarDecl(Id(c),IntLiteral(5)),VarDecl(Id(d),IntLiteral(6)),FuncDecl(Id(main)[],([VarDecl(Id(matrix),ArrayLiteral(ArrayLiteral(IntLiteral(0),IntLiteral(0)),ArrayLiteral(IntLiteral(0),IntLiteral(0))))][CallStmt(Id(print),[StringLiteral(Creating 2x2 matrix:\n)]),CallStmt(Id(print),[StringLiteral(a\tb\nc\td\n)]),CallStmt(Id(print),[StringLiteral(a = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(a)])]),CallStmt(Id(print),[StringLiteral(b = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(b)])]),CallStmt(Id(print),[StringLiteral(c = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(c)])]),CallStmt(Id(print),[StringLiteral(d = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[Id(d)])]),Assign(Id(matrix),CallExpr(Id(matrix_2x2),[Id(a),Id(b),Id(c),Id(d)])),CallStmt(Id(print),[StringLiteral(m[0][0] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[ArrayCell(Id(matrix),[IntLiteral(0),IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(m[0][1] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[ArrayCell(CallExpr(Id(matrix_2x2),[Id(a),Id(b),Id(c),Id(d)]),[IntLiteral(0),IntLiteral(1)])])]),CallStmt(Id(print),[StringLiteral(m[1][0] = )]),CallStmt(Id(printStrLn),[CallExpr(Id(string_of_int),[ArrayCell(Id(matrix),[IntLiteral(1),IntLiteral(0)])])]),CallStmt(Id(print),[StringLiteral(m[1][1] = )]),CallStmt(Id(print),[CallExpr(Id(string_of_int),[ArrayCell(CallExpr(Id(matrix_2x2),[Id(a),Id(b),Id(c),Id(d)]),[IntLiteral(1),IntLiteral(1)])])]),Return()])),FuncDecl(Id(matrix_2x2)[VarDecl(Id(a00)),VarDecl(Id(a01)),VarDecl(Id(a10)),VarDecl(Id(a11))],([VarDecl(Id(m),[2,2],ArrayLiteral(ArrayLiteral(IntLiteral(0),IntLiteral(0)),ArrayLiteral(IntLiteral(0),IntLiteral(0))))][Assign(ArrayCell(Id(m),[IntLiteral(0),IntLiteral(0)]),Id(a00)),Assign(ArrayCell(Id(m),[IntLiteral(0),IntLiteral(1)]),Id(a01)),Assign(ArrayCell(Id(m),[IntLiteral(1),IntLiteral(0)]),Id(a10)),Assign(ArrayCell(Id(m),[IntLiteral(1),IntLiteral(1)]),Id(a11)),Return(Id(m))]))])<EOF> || num:  502  |  True
--Jasmin Code  502  --
.source MCClass.java
.class public MCClass
.super java.lang.Object
.field static a I
.field static b I
.field static c I
.field static d I

.method public static Main()V
.var 0 is matrix [[I from Label0 to Label1
Label0:
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_0
	iastore
	dup
	iconst_1
	iconst_0
	iastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_0
	iastore
	dup
	iconst_1
	iconst_0
	iastore
	aastore
	astore_0
	ldc "Creating 2x2 matrix:\n"
	invokestatic io/print(Ljava/lang/String;)V
	ldc "a\tb\nc\td\n"
	invokestatic io/print(Ljava/lang/String;)V
	ldc "a = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.a I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "b = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.b I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "c = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.c I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "d = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.d I
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	getstatic MCClass.a I
	getstatic MCClass.b I
	getstatic MCClass.c I
	getstatic MCClass.d I
	invokestatic MCClass/matrix_2x2(IIII)[[I
	astore_0
	ldc "m[0][0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_0
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "m[0][1] = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.a I
	getstatic MCClass.b I
	getstatic MCClass.c I
	getstatic MCClass.d I
	invokestatic MCClass/matrix_2x2(IIII)[[I
	iconst_0
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "m[1][0] = "
	invokestatic io/print(Ljava/lang/String;)V
	aload_0
	iconst_1
	aaload
	iconst_0
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/printStrLn(Ljava/lang/String;)V
	ldc "m[1][1] = "
	invokestatic io/print(Ljava/lang/String;)V
	getstatic MCClass.a I
	getstatic MCClass.b I
	getstatic MCClass.c I
	getstatic MCClass.d I
	invokestatic MCClass/matrix_2x2(IIII)[[I
	iconst_1
	aaload
	iconst_1
	iaload
	invokestatic io/string_of_int(I)Ljava/lang/String;
	invokestatic io/print(Ljava/lang/String;)V
	return
Label1:
	return
.limit stack 7
.limit locals 1
.end method

.method public static matrix_2x2(IIII)[[I
.var 0 is a00 I from Label0 to Label1
.var 1 is a01 I from Label0 to Label1
.var 2 is a10 I from Label0 to Label1
.var 3 is a11 I from Label0 to Label1
.var 4 is m [[I from Label0 to Label1
Label0:
	iconst_2
	anewarray [I
	dup
	iconst_0
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_0
	iastore
	dup
	iconst_1
	iconst_0
	iastore
	aastore
	dup
	iconst_1
	iconst_2
	newarray int
	dup
	iconst_0
	iconst_0
	iastore
	dup
	iconst_1
	iconst_0
	iastore
	aastore
	astore 4
	aload 4
	iconst_0
	aaload
	iconst_0
	iload_0
	iastore
	aload 4
	iconst_0
	aaload
	iconst_1
	iload_1
	iastore
	aload 4
	iconst_1
	aaload
	iconst_0
	iload_2
	iastore
	aload 4
	iconst_1
	aaload
	iconst_1
	iload_3
	iastore
	aload 4
	areturn
Label1:
	iconst_1
	anewarray [I
	areturn
.limit stack 7
.limit locals 5
.end method

.method public static main([Ljava/lang/String;)V
.var 0 is args [Ljava/lang/String; from Label0 to Label1
Label0:
	invokestatic MCClass/Main()V
Label1:
	return
.limit stack 0
.limit locals 1
.end method

.method public <init>()V
.var 0 is this LMCClass; from Label0 to Label1
Label0:
	aload_0
	invokespecial java/lang/Object/<init>()V
Label1:
	return
.limit stack 1
.limit locals 1
.end method

.method public static <clinit>()V
Label0:
	iconst_3
	putstatic MCClass.a I
	iconst_4
	putstatic MCClass.b I
	iconst_5
	putstatic MCClass.c I
	bipush 6
	putstatic MCClass.d I
Label1:
	return
.limit stack 1
.limit locals 0
.end method

Result: Creating 2x2 matrix:
a	b
c	d
a = 3
b = 4
c = 5
d = 6
m[0][0] = 3
m[0][1] = 4
m[1][0] = 5
m[1][1] = 6
Expect: Creating 2x2 matrix:
a	b
c	d
a = 3
b = 4
c = 5
d = 6
m[0][0] = 3
m[0][1] = 4
m[1][0] = 5
m[1][1] = 6
================================END 502 ================================

Tests run  100
Errors  []
[]
Test output
 ....................................................................................................
----------------------------------------------------------------------
Ran 100 tests in 19.785s

OK

